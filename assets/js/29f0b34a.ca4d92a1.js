"use strict";(self.webpackChunkocelot_website=self.webpackChunkocelot_website||[]).push([[3190],{5688:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"tutorial/tutorial-beam-dynamics/space_charge","title":"3. Space Charge","description":"This notebook was created by Sergey Tomin (sergey.tomin@desy.de). January 2018.","source":"@site/docs/tutorial/tutorial-beam-dynamics/3_space_charge.md","sourceDirName":"tutorial/tutorial-beam-dynamics","slug":"/tutorial/tutorial-beam-dynamics/space_charge","permalink":"/docs/tutorial/tutorial-beam-dynamics/space_charge","draft":false,"unlisted":false,"editUrl":"https://github.com/ocelot-collab/ocelot-collab.github.io/tree/main/docs/tutorial/tutorial-beam-dynamics/3_space_charge.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"3. Space Charge"},"sidebar":"tutorialSidebar","previous":{"title":"2. Tracking","permalink":"/docs/tutorial/tutorial-beam-dynamics/tracking"},"next":{"title":"4. Wakefields","permalink":"/docs/tutorial/tutorial-beam-dynamics/wake"}}');var i=n(4848),r=n(8453);const o={sidebar_position:3,title:"3. Space Charge"},s="3. Space Charge.",c={},l=[{value:"This example will cover the following topics:",id:"this-example-will-cover-the-following-topics",level:4},{value:"Requirements",id:"requirements",level:4},{value:"Import of modules",id:"import-of-modules",level:2},{value:"Change RF parameters for the comparison with ASTRA",id:"change-rf-parameters-for-the-comparison-with-astra",level:3},{value:"Initializing SpaceCharge",id:"initializing-spacecharge",level:2}];function p(e){const t={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("small",{children:(0,i.jsxs)(t.p,{children:["This notebook was created by Sergey Tomin (",(0,i.jsx)(t.a,{href:"mailto:sergey.tomin@desy.de",children:"sergey.tomin@desy.de"}),"). January 2018."]})}),"\n",(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"3-space-charge",children:(0,i.jsx)(t.a,{href:"https://github.com/ocelot-collab/ocelot/blob/dev/demos/ipython_tutorials/3_space_charge.ipynb",children:"3. Space Charge."})})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Second order tracking with space charge effect of the 200k particles."})}),"\n",(0,i.jsx)(t.p,{children:"As an example, we will use lattice file (converted to Ocelot format) of the European XFEL Injector."}),"\n",(0,i.jsxs)(t.p,{children:["The space charge forces are calculated by solving the Poisson equation in the bunch frame.\nThen the Lorentz transformed electromagnetic field is applied as a kick in the laboratory frame.\nFor the solution of the Poisson equation we use an integral representation of the electrostatic potential by convolution of the free-space Green's function with the charge distribution. The convolution equation is solved with the help of the Fast Fourier Transform (FFT). The same algorithm for solution of the 3D Poisson equation is used, for example, in ",(0,i.jsx)(t.a,{href:"http://www.desy.de/~mpyflo/",children:"ASTRA"}),"."]}),"\n",(0,i.jsx)(t.h4,{id:"this-example-will-cover-the-following-topics",children:"This example will cover the following topics:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Initialization of the Space Charge objects and the places of their applying"}),"\n",(0,i.jsx)(t.li,{children:"tracking of second order with space charge effect."}),"\n"]}),"\n",(0,i.jsx)(t.h4,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"injector_lattice.py - input file, the The European XFEL Injector lattice."}),"\n",(0,i.jsx)(t.li,{children:"beam_6MeV.ast    - input file, initial beam distribution in ASTRA format (was obtained from s2e simulation performed with ASTRA)."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"import-of-modules",children:"Import of modules"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"# the output of plotting commands is displayed inline within frontends, \n# directly below the code cell that produced it\n%matplotlib inline\n\nfrom time import time \n\n# this python library provides generic shallow (copy) \n# and deep copy (deepcopy) operations \nfrom copy import deepcopy\n\n# import from Ocelot main modules and functions\nfrom ocelot import *\n\n# import from Ocelot graphical modules\nfrom ocelot.gui.accelerator import *\n\n# import injector lattice\nfrom injector_lattice import *\n\n# load beam distribution\n# this function convert Astra beam distribution to Ocelot format \n# - ParticleArray. ParticleArray is designed for tracking.\n# In order to work with converters we have to import specific \n# module from ocelot.adaptors.\nfrom ocelot.adaptors.astra2ocelot import *\n"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"    initializing ocelot...\n"})}),"\n",(0,i.jsx)(t.h3,{id:"change-rf-parameters-for-the-comparison-with-astra",children:"Change RF parameters for the comparison with ASTRA"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"phi1=18.7268\nV1=18.50662e-3/np.cos(phi1*pi/180)\n\nC_A1_1_1_I1.v = V1; C_A1_1_1_I1.phi = phi1\nC_A1_1_2_I1.v = V1; C_A1_1_2_I1.phi = phi1\nC_A1_1_3_I1.v = V1; C_A1_1_3_I1.phi = phi1\nC_A1_1_4_I1.v = V1; C_A1_1_4_I1.phi = phi1\nC_A1_1_5_I1.v = V1; C_A1_1_5_I1.phi = phi1\nC_A1_1_6_I1.v = V1; C_A1_1_6_I1.phi = phi1\nC_A1_1_7_I1.v = V1; C_A1_1_7_I1.phi = phi1\nC_A1_1_8_I1.v = V1; C_A1_1_8_I1.phi = phi1\n\nphi13=180\nV13=-20.2E-3/8/np.cos(phi13*pi/180)\n\nC3_AH1_1_1_I1.v=V13; C3_AH1_1_1_I1.phi=phi13\nC3_AH1_1_2_I1.v=V13; C3_AH1_1_2_I1.phi=phi13\nC3_AH1_1_3_I1.v=V13; C3_AH1_1_3_I1.phi=phi13\nC3_AH1_1_4_I1.v=V13; C3_AH1_1_4_I1.phi=phi13\nC3_AH1_1_5_I1.v=V13; C3_AH1_1_5_I1.phi=phi13\nC3_AH1_1_6_I1.v=V13; C3_AH1_1_6_I1.phi=phi13\nC3_AH1_1_7_I1.v=V13; C3_AH1_1_7_I1.phi=phi13\nC3_AH1_1_8_I1.v=V13; C3_AH1_1_8_I1.phi=phi13\n"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'# load and convert ASTRA file to OCELOT beam distribution\n# p_array_init = astraBeam2particleArray(filename=\'beam_6MeV.ast\')\n\n# save ParticleArray to compresssed numpy array \n# save_particle_array("sc_beam.npz", p_array_init)\np_array_init = load_particle_array("sc_beam.npz")\n\n\nbins_start, hist_start = get_current(p_array_init, num_bins=200)\n\nplt.title("current: end")\nplt.plot(bins_start*1000, hist_start)\nplt.xlabel("s, mm")\nplt.ylabel("I, A")\nplt.grid(True)\nplt.show()\n'})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"png",src:n(8094).A+"",width:"567",height:"453"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'# initialization of tracking method, for second order tracking we have to choose SecondTM \nmethod = {"global": SecondTM}\n\n# for first order tracking uncomment next line\n# method = {"global": TransferMap}\n\n# we will start simulation from point 3.2 from the gun. \n# For this purpose  marker was created (start_sim=Marker()) \n# and placed in 3.2 m after gun \n# Q_38_I1 is quadrupole between RF cavities 1.3 GHz and 3.9 GHz\n# C3_AH1_1_8_I1 is the last section of the 3.9 GHz cavity\nlat = MagneticLattice(cell, start=start_sim, stop=Q_38_I1, method=method)\n'})}),"\n",(0,i.jsx)(t.h2,{id:"initializing-spacecharge",children:"Initializing SpaceCharge"}),"\n",(0,i.jsxs)(t.p,{children:["More information about the Space Charge physics process can be found here:",(0,i.jsx)(t.br,{}),"\n","\ud83d\udc49 ",(0,i.jsx)(t.a,{href:"https://www.ocelot-collab.com/docs/docu/physics-processes/sc",children:(0,i.jsx)(t.strong,{children:"Space Charge in Ocelot"})})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"# Initialize SpaceCharge processes with different application steps\nsc1 = SpaceCharge(ste=1) # Applied every 1 * Navigator.unit_step \nsc1.nmesh_xyz = [63, 63, 63] # SC mesh\n\n# we can increase step with energy grow and this speed up our tracking\nsc5 = SpaceCharge(step=5) # Applied every 5 * Navigator.unit_step \nsc5.nmesh_xyz = [63, 63, 63] \n"})}),"\n",(0,i.jsxs)(t.p,{children:["To apply any physics process, it must be registered through a ",(0,i.jsx)(t.a,{href:"https://www.ocelot-collab.com/docs/docu/OCELOT%20fundamentals/navigator",children:(0,i.jsx)(t.code,{children:"Navigator"})}),", which is then passed to the ",(0,i.jsx)(t.a,{href:"https://www.ocelot-collab.com/docs/docu/OCELOT%20fundamentals/tracking",children:(0,i.jsx)(t.code,{children:"track"})})," function."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'# Create Navigator to manage application of physics processes\nnavi = Navigator(lat)\n\n# add physics processes from the first element to the last of the lattice\nnavi.add_physics_proc(sc1, lat.sequence[0], C_A1_1_2_I1)\nnavi.add_physics_proc(sc5, C_A1_1_2_I1, lat.sequence[-1])\n\n# definiing of unit step in [m]\nnavi.unit_step = 0.02\n\n# deep copy of the initial beam distribution \np_array = deepcopy(p_array_init)\nstart = time()\ntws_track, p_array = track(lat, p_array, navi)\n\nprint("time exec: ", time() - start, "sec")\n'})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"    z = 12.697400000000002 / 12.697400000000007. Applied: time exec:  18.347124099731445 sec\n"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'# you can change top_plot argument, for example top_plot=["alpha_x", "alpha_y"]\nplot_opt_func(lat, tws_track, top_plot=["E"], fig_name=0, legend=False)\nplt.show()\n'})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"png",src:n(3074).A+"",width:"633",height:"487"})}),"\n",(0,i.jsx)(t.h1,{id:"comparison-with-astra",children:"Comparison with ASTRA"}),"\n",(0,i.jsx)(t.p,{children:"Beam tracking with ASTRA was performed by Igor Zagorodnov (DESY)."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'sa, bx_sc, by_sc, bx_wo_sc, by_wo_sc = np.loadtxt("astra_sim.txt", \n                                                  usecols=(0, 1, 2, 3, 4), \n                                                  unpack=True)\n\ns = [tw.s for tw in tws_track]\nbx = [tw.beta_x for tw in tws_track]\nby = [tw.beta_y for tw in tws_track]\nfig, ax = plot_API(lat, legend=False)\nax.plot(s, bx, "r", label="Ocelot, bx")\nax.plot(sa-3.2, bx_sc, "b-",label="ASTRA, bx")\nax.plot(s, by, "r", label="Ocelot, by")\nax.plot(sa-3.2, by_sc, "b-",label="ASTRA, by")\nax.legend()\nplt.show()\n'})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"png",src:n(1236).A+"",width:"594",height:"454"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"plt.plot(p_array.tau(), p_array.p(), 'r.')\nplt.show()\n"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"png",src:n(3911).A+"",width:"588",height:"416"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},3074:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/3_space_charge_11_0-ca962e2082ec34a4201bd1f082174672.png"},1236:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/3_space_charge_13_0-7141c2a33b14988d4dfc479ca4b2c22d.png"},3911:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/3_space_charge_14_0-a0d65afd987d2012ae28064535cffefd.png"},8094:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/3_space_charge_6_0-6ed73f8c285babc1263fde0e5bd6292c.png"},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var a=n(6540);const i={},r=a.createContext(i);function o(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);