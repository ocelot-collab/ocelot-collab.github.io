"use strict";(self.webpackChunkocelot_website=self.webpackChunkocelot_website||[]).push([[9680],{3342:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"docu/physics-processes/beam-analysis","title":"Beam Analysis","description":"L551)","source":"@site/docs/docu/physics-processes/beam-analysis.md","sourceDirName":"docu/physics-processes","slug":"/docu/physics-processes/beam-analysis","permalink":"/docs/docu/physics-processes/beam-analysis","draft":false,"unlisted":false,"editUrl":"https://github.com/ocelot-collab/ocelot/docs/docu/physics-processes/beam-analysis.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"title":"Beam Analysis"},"sidebar":"docsSidebar","previous":{"title":"BeamTransform Class","permalink":"/docs/docu/physics-processes/beamtransform"},"next":{"title":"Chicane","permalink":"/docs/docu/physics-processes/chicane"}}');var n=a(4848),l=a(8453);const t={sidebar_position:10,title:"Beam Analysis"},r="Beam Analysis",o={},c=[{value:"BeamAnalysis Class",id:"beamanalysis-class",level:2},{value:"Parameters:",id:"parameters",level:3},{value:"Attributes:",id:"attributes",level:3},{value:"Methods:",id:"methods",level:3},{value:"<code>__init__(self, filename)</code>",id:"__init__self-filename",level:4},{value:"<code>apply(self, p_array, dz)</code>",id:"applyself-p_array-dz",level:4},{value:"<code>finalize(self)</code>",id:"finalizeself",level:4},{value:"Summary",id:"summary",level:2},{value:"Example Usage",id:"example-usage",level:2}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"beam-analysis",children:(0,n.jsx)(s.a,{href:"https://github.com/ocelot-collab/ocelot/blob/master/ocelot/cpbd/physics_proc.py#L551",children:"Beam Analysis"})})}),"\n",(0,n.jsxs)(s.p,{children:["This section provides documentation for the ",(0,n.jsx)(s.a,{href:"https://github.com/ocelot-collab/ocelot/blob/master/ocelot/cpbd/physics_proc.py#L551",children:(0,n.jsx)(s.code,{children:"BeamAnalysis"})})," class, which is used to analyze the properties of a particle beam. The class performs beam diagnostics such as bunching, energy, and transverse beam sizes, and saves the analysis results to a file."]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"beamanalysis-class",children:"BeamAnalysis Class"}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"BeamAnalysis"})," class analyzes various properties of a particle beam during a simulation, including the bunching factor, transverse beam sizes (sigma_x, sigma_y), and energy. It uses a curve-fitting method to analyze the longitudinal profile of the beam and computes beam characteristics like bunching and transverse sigma values."]}),"\n",(0,n.jsx)(s.h3,{id:"parameters",children:"Parameters:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"filename"})," (",(0,n.jsx)(s.code,{children:"str"}),"): The name of the file where the analysis data will be saved."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"attributes",children:"Attributes:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"lambda_mod"})," (",(0,n.jsx)(s.code,{children:"float"}),"): The modulation wavelength for the analysis. Default is ",(0,n.jsx)(s.code,{children:"1e-6"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"nlambdas"})," (",(0,n.jsx)(s.code,{children:"int"}),"): The number of modulation wavelengths to include in the analysis (default is ",(0,n.jsx)(s.code,{children:"4"}),")."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"p"})," (",(0,n.jsx)(s.code,{children:"list"}),"): A list of particle momenta corresponding to each analysis step."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"phi"})," (",(0,n.jsx)(s.code,{children:"list"}),"): A list of phase values corresponding to each analysis step."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"s"})," (",(0,n.jsx)(s.code,{children:"list"}),"): A list of longitudinal positions (s) for each analysis step."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"energy"})," (",(0,n.jsx)(s.code,{children:"list"}),"): A list of particle energies for each analysis step."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"bunching"})," (",(0,n.jsx)(s.code,{children:"list"}),"): A list of bunching factors for each analysis step."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"sigma_x"})," (",(0,n.jsx)(s.code,{children:"list"}),"): A list of standard deviations of the transverse beam size in the x-direction for each analysis step."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"sigma_y"})," (",(0,n.jsx)(s.code,{children:"list"}),"): A list of standard deviations of the transverse beam size in the y-direction for each analysis step."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"methods",children:"Methods:"}),"\n",(0,n.jsx)(s.h4,{id:"__init__self-filename",children:(0,n.jsx)(s.code,{children:"__init__(self, filename)"})}),"\n",(0,n.jsxs)(s.p,{children:["Constructor to initialize the ",(0,n.jsx)(s.code,{children:"BeamAnalysis"})," class. This method accepts the filename where the analysis data will be saved."]}),"\n",(0,n.jsx)(s.h4,{id:"applyself-p_array-dz",children:(0,n.jsx)(s.code,{children:"apply(self, p_array, dz)"})}),"\n",(0,n.jsxs)(s.p,{children:["Applies the beam analysis to the particle array (",(0,n.jsx)(s.code,{children:"p_array"}),") over a step size (",(0,n.jsx)(s.code,{children:"dz"}),"). The method:"]}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsx)(s.li,{children:"Defines a test function to fit to the longitudinal profile of the beam."}),"\n",(0,n.jsxs)(s.li,{children:["Selects a portion of the beam that corresponds to the region defined by ",(0,n.jsx)(s.code,{children:"lambda_mod"})," and ",(0,n.jsx)(s.code,{children:"nlambdas"}),"."]}),"\n",(0,n.jsx)(s.li,{children:"Performs curve fitting to determine parameters related to the beam's longitudinal profile."}),"\n",(0,n.jsx)(s.li,{children:"Computes the bunching factor and transverse beam sizes (sigma_x, sigma_y)."}),"\n",(0,n.jsx)(s.li,{children:"Appends the computed values (momentum, phase, bunching, sigma_x, sigma_y, energy) to the corresponding lists."}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"finalizeself",children:(0,n.jsx)(s.code,{children:"finalize(self)"})}),"\n",(0,n.jsxs)(s.p,{children:["Finalizes the beam analysis by saving the computed data (e.g., momentum, phase, bunching factor, transverse sizes) to a text file (",(0,n.jsx)(s.code,{children:"filename"}),")."]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"summary",children:"Summary"}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"BeamAnalysis"})," class is used for analyzing and saving data related to the longitudinal and transverse properties of a particle beam. It computes parameters such as bunching factor, transverse beam sizes, and energy, and stores the results in a file for later use. This class is useful for beam diagnostics and optimization in accelerator simulations."]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:'# Create a BeamAnalysis instance with a specified filename\nbeam_analysis = BeamAnalysis(filename="beam_analysis_results.txt")\n\n# Apply the beam analysis to a particle array `p_array` over a step size `dz`\nbeam_analysis.apply(p_array, dz=0.01)\n\n# Finalize and save the analysis results to the file\nbeam_analysis.finalize()\n'})})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,s,a)=>{a.d(s,{R:()=>t,x:()=>r});var i=a(6540);const n={},l=i.createContext(n);function t(e){const s=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),i.createElement(l.Provider,{value:s},e.children)}}}]);