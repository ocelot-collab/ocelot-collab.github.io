"use strict";(self.webpackChunkocelot_website=self.webpackChunkocelot_website||[]).push([[508],{834:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"docu/physics-processes/sc","title":"Space Charge 3D","description":"Space Charge class","source":"@site/docs/docu/physics-processes/sc.md","sourceDirName":"docu/physics-processes","slug":"/docu/physics-processes/sc","permalink":"/docs/docu/physics-processes/sc","draft":false,"unlisted":false,"editUrl":"https://github.com/ocelot-collab/ocelot-collab.github.io/tree/main/docs/docu/physics-processes/sc.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Space Charge 3D","description":"Space Charge class"},"sidebar":"docsSidebar","previous":{"title":"PhysProc Parent Class","permalink":"/docs/docu/physics-processes/phys-proc"},"next":{"title":"Longitudinal Space Charge","permalink":"/docs/docu/physics-processes/lsc"}}');var a=t(4848),r=t(8453);const i={sidebar_position:2,title:"Space Charge 3D",description:"Space Charge class"},c="SpaceCharge Class",o={},l=[{value:"Parameters:",id:"parameters",level:3},{value:"Methods:",id:"methods",level:3},{value:"<code>__init__(self, step=1, **kwargs)</code>",id:"__init__self-step1-kwargs",level:4},{value:"<code>prepare(self, lat)</code>",id:"prepareself-lat",level:4},{value:"<code>sym_kernel(self, ijk2, hxyz)</code>",id:"sym_kernelself-ijk2-hxyz",level:4},{value:"<code>potential(self, q, steps)</code>",id:"potentialself-q-steps",level:4},{value:"<code>el_field(self, X, Q, gamma, nxyz)</code>",id:"el_fieldself-x-q-gamma-nxyz",level:4},{value:"<code>apply(self, p_array, zstep)</code>",id:"applyself-p_array-zstep",level:4},{value:"<code>__repr__(self) -&gt; str</code>",id:"__repr__self---str",level:4},{value:"Summary",id:"summary",level:2},{value:"Space Charge Example",id:"space-charge-example",level:2},{value:"Step-by-Step",id:"step-by-step",level:3}];function h(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsxs)(s.h1,{id:"spacecharge-class",children:[(0,a.jsx)(s.a,{href:"https://github.com/ocelot-collab/ocelot/blob/master/ocelot/cpbd/sc.py#L74",children:"SpaceCharge"})," Class"]})}),"\n",(0,a.jsxs)(s.p,{children:["The ",(0,a.jsx)(s.a,{href:"https://github.com/ocelot-collab/ocelot/blob/master/ocelot/cpbd/sc.py#L74",children:(0,a.jsx)(s.code,{children:"SpaceCharge"})}),"  class models the space charge forces in a particle beam by solving the Poisson equation in the bunch frame.\nThen the Lorentz transformed electromagnetic field is applied as a kick in the laboratory frame.\nFor the solution of the Poisson equation we use an integral representation of the electrostatic potential\nby convolution of the free-space Green's function with the charge distribution.\nThe convolution equation is solved with the help of the Fast Fourier Transform (FFT). The same algorithm for\nsolution of the 3D Poisson equation is used, for example, in ASTRA."]}),"\n",(0,a.jsx)(s.h3,{id:"parameters",children:"Parameters:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"step"})," (",(0,a.jsx)(s.code,{children:"int"}),"): Step size used in unit steps. Default is ",(0,a.jsx)(s.code,{children:"1"}),"."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"nmesh_xyz"})," (",(0,a.jsx)(s.code,{children:"list"}),"): Defines the number of mesh points in each dimension for the 3D mesh. Default is ",(0,a.jsx)(s.code,{children:"[63, 63, 63]"}),"."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"low_order_kick"})," (",(0,a.jsx)(s.code,{children:"bool"}),"): Whether to use a low-order approximation for the kick. Default is ",(0,a.jsx)(s.code,{children:"True"}),"."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"random_mesh"})," (",(0,a.jsx)(s.code,{children:"bool"}),"): If ",(0,a.jsx)(s.code,{children:"True"}),", the mesh is shifted slightly at each step to reduce numerical noise. Default is ",(0,a.jsx)(s.code,{children:"False"}),"."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"random_seed"})," (",(0,a.jsx)(s.code,{children:"int"}),"): Seed for random number generation when ",(0,a.jsx)(s.code,{children:"random_mesh"})," is ",(0,a.jsx)(s.code,{children:"True"}),". Default is ",(0,a.jsx)(s.code,{children:"10"}),"."]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"methods",children:"Methods:"}),"\n",(0,a.jsx)(s.h4,{id:"__init__self-step1-kwargs",children:(0,a.jsx)(s.code,{children:"__init__(self, step=1, **kwargs)"})}),"\n",(0,a.jsxs)(s.p,{children:["Constructor to initialize the ",(0,a.jsx)(s.code,{children:"SpaceCharge"})," class with the specified parameters. It sets up the mesh, the randomization flag, and the random seed."]}),"\n",(0,a.jsx)(s.h4,{id:"prepareself-lat",children:(0,a.jsx)(s.code,{children:"prepare(self, lat)"})}),"\n",(0,a.jsx)(s.p,{children:"Prepares the simulation by checking the step size and setting the random seed if necessary."}),"\n",(0,a.jsx)(s.h4,{id:"sym_kernelself-ijk2-hxyz",children:(0,a.jsx)(s.code,{children:"sym_kernel(self, ijk2, hxyz)"})}),"\n",(0,a.jsx)(s.p,{children:"Computes the symmetric kernel for the 3D Poisson equation solution using the convolution method. The kernel is used to calculate the electrostatic potential in the beam."}),"\n",(0,a.jsx)(s.h4,{id:"potentialself-q-steps",children:(0,a.jsx)(s.code,{children:"potential(self, q, steps)"})}),"\n",(0,a.jsxs)(s.p,{children:["Solves the Poisson equation for the electrostatic potential in the beam, given the charge distribution (",(0,a.jsx)(s.code,{children:"q"}),") and step sizes (",(0,a.jsx)(s.code,{children:"steps"}),"). This method uses the Fast Fourier Transform (FFT) for efficient computation."]}),"\n",(0,a.jsx)(s.h4,{id:"el_fieldself-x-q-gamma-nxyz",children:(0,a.jsx)(s.code,{children:"el_field(self, X, Q, gamma, nxyz)"})}),"\n",(0,a.jsx)(s.p,{children:"Calculates the electric field in the rest frame of the bunch by using a 3D interpolation method. The result is Lorentz transformed to the laboratory frame."}),"\n",(0,a.jsx)(s.h4,{id:"applyself-p_array-zstep",children:(0,a.jsx)(s.code,{children:"apply(self, p_array, zstep)"})}),"\n",(0,a.jsxs)(s.p,{children:["Applies the space charge kick to the particle array (",(0,a.jsx)(s.code,{children:"p_array"}),") over a given path length (",(0,a.jsx)(s.code,{children:"zstep"}),"). The method computes the electric field and updates the particle momenta according to the space charge forces."]}),"\n",(0,a.jsx)(s.h4,{id:"__repr__self---str",children:(0,a.jsx)(s.code,{children:"__repr__(self) -> str"})}),"\n",(0,a.jsxs)(s.p,{children:["Returns a string representation of the ",(0,a.jsx)(s.code,{children:"SpaceCharge"})," class, including key parameters like step size, mesh resolution, and randomization settings."]}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h2,{id:"summary",children:"Summary"}),"\n",(0,a.jsxs)(s.p,{children:["The ",(0,a.jsx)(s.code,{children:"SpaceCharge"})," class simulates the space charge forces acting on a particle beam by solving the Poisson equation for the beam's charge distribution. The class computes the electric field using a convolution method and applies the resulting forces as kicks to the particle array. This model is crucial for understanding beam dynamics, especially in high-intensity beams where space charge effects are significant."]}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h2,{id:"space-charge-example",children:"Space Charge Example"}),"\n",(0,a.jsx)(s.p,{children:"This example demonstrates how to simulate the impact of 3D space charge forces on the evolution of a particle beam\nthrough a simple FODO-like lattice. We compare tracking with and without space charge effects by plotting the resulting beta functions."}),"\n",(0,a.jsx)(s.h3,{id:"step-by-step",children:"Step-by-Step"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'from ocelot import *\nfrom ocelot.gui import *\n\n# 1. Generate a test particle array with defined Twiss parameters\nparray_init = generate_parray(\n    nparticles=100000,\n    tws=Twiss(beta_x=10, beta_y=10, E=0.01),  # E = 10 MeV\n    sigma_tau=1e-4\n)\n\n# 2. Define a simple FODO-like lattice\nqf = Quadrupole(l=0.2, k1=2)\nqd = Quadrupole(l=0.2, k1=-2)\nd = Drift(l=1)\nm1 = Marker()  # Start of section\nm2 = Marker()  # End of section\n\nlat = MagneticLattice([m1, d, qf, d, qd, d, m2])\n\n# 3. Tracking WITHOUT space charge\n# Create navigator with step size 0.1 m\nnavi = Navigator(lat, unit_step=0.1)\n\n# Add a dummy physics process to force tracking every step\nemp = EmptyProc()\nnavi.add_physics_proc(emp, m1, m2)\n\nparray = parray_init.copy()\ntws_track_no_sc, _ = track(lat, parray, navi)\n\n# 4. Tracking WITH 3D space charge\nnavi = Navigator(lat, unit_step=0.1)\n\n# Create space charge process with default 3D mesh resolution\nsc = SpaceCharge(nmesh_xyz=[63, 63, 63])\nnavi.add_physics_proc(sc, m1, m2)\n\nparray = parray_init.copy()\ntws_track_w_sc, _ = track(lat, parray, navi)\n\n# 5. Plot beta functions with and without SC\nfig, (ax_x, ax_y) = plot_API(lat, add_extra_subplot=True)\n\n# Extract beta functions\ns_no  = [tw.s for tw in tws_track_no_sc]\nbx_no = [tw.beta_x for tw in tws_track_no_sc]\nby_no = [tw.beta_y for tw in tws_track_no_sc]\n\ns_sc  = [tw.s for tw in tws_track_w_sc]\nbx_sc = [tw.beta_x for tw in tws_track_w_sc]\nby_sc = [tw.beta_y for tw in tws_track_w_sc]\n\n# Plot horizontal beta functions\nax_x.plot(s_no, bx_no, label="SC OFF")\nax_x.plot(s_sc, bx_sc, label="SC ON")\nax_x.set_ylabel(r"$\\beta_x$ [m]")\nax_x.legend()\n\n# Plot vertical beta functions\nax_y.plot(s_no, by_no, label="SC OFF")\nax_y.plot(s_sc, by_sc, label="SC ON")\nax_y.set_ylabel(r"$\\beta_y$ [m]")\nax_y.set_xlabel("s [m]")\nax_y.legend()\n\nplt.show()\n'})}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.img,{alt:"png",src:t(1312).A+"",width:"640",height:"480"})})]})}function d(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},1312:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/sc_exmp-f3f8f156ffc81cf79bc9b8654d462d1d.png"},8453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>c});var n=t(6540);const a={},r=n.createContext(a);function i(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);