"use strict";(self.webpackChunkocelot_website=self.webpackChunkocelot_website||[]).push([[3873],{4163:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"tutorial/tutorial-photons/pfs_2_radiation_field","title":"2. Coherent radiation module","description":"This notebook was created by Andrei Trebushinin (trebandrej@gmail.com) and Svitozar Serkez. August 2019.","source":"@site/docs/tutorial/tutorial-photons/pfs_2_radiation_field.md","sourceDirName":"tutorial/tutorial-photons","slug":"/tutorial/tutorial-photons/pfs_2_radiation_field","permalink":"/docs/tutorial/tutorial-photons/pfs_2_radiation_field","draft":false,"unlisted":false,"editUrl":"https://github.com/ocelot-collab/ocelot/docs/tutorial/tutorial-photons/pfs_2_radiation_field.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"2. Coherent radiation module"},"sidebar":"tutorialSidebar","previous":{"title":"1. Synchrotron Radiation Module","permalink":"/docs/tutorial/tutorial-photons/pfs_1_synchrotron_radiation"},"next":{"title":"3. Reflection from Imperfect Mirror","permalink":"/docs/tutorial/tutorial-photons/pfs_3_imperfect_mirror"}}');var i=n(4848),t=n(8453);const l={sidebar_position:2,title:"2. Coherent radiation module"},r="2. Coherent radiation module and RadiationField object.",o={},c=[{value:"Contents",id:"contents",level:3},{value:"Generating Gaussian RadiationField",id:"generating-gaussian-radiationfield",level:3},{value:"Plotting",id:"plotting",level:2},{value:"Focusing",id:"focusing",level:2},{value:"Propagating",id:"propagating",level:2},{value:"Aperturing",id:"aperturing",level:2},{value:"Interpolating",id:"interpolating",level:2},{value:"Space-Frequency analysis and manipulation",id:"space-frequency-analysis-and-manipulation",level:2},{value:"Calculating on-axis Wigner distribution",id:"calculating-on-axis-wigner-distribution",level:3},{value:"Compress the chirped pulse",id:"compress-the-chirped-pulse",level:3},{value:"Calculating Spectrogtam",id:"calculating-spectrogtam",level:3}];function d(e){const s={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",math:"math",mfrac:"mfrac",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msqrt:"msqrt",mstyle:"mstyle",msub:"msub",msubsup:"msubsup",msup:"msup",ol:"ol",p:"p",path:"path",pre:"pre",semantics:"semantics",span:"span",svg:"svg",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("small",{children:(0,i.jsx)(s.p,{children:(0,i.jsxs)(s.em,{children:["This notebook was created by Andrei Trebushinin (",(0,i.jsx)(s.a,{href:"mailto:trebandrej@gmail.com",children:"trebandrej@gmail.com"}),") and Svitozar Serkez. August 2019."]})})}),"\n",(0,i.jsx)(s.header,{children:(0,i.jsxs)(s.h1,{id:"2-coherent-radiation-module-and-radiationfield-object",children:["2. Coherent radiation module and ",(0,i.jsx)(s.code,{children:"RadiationField"})," object."]})}),"\n",(0,i.jsx)(s.p,{children:"OCELOT has the RadiationField object which represents a 3D electric field distribution, initially in space-time domain"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"%matplotlib inline\nimport logging\nimport ocelot\nfrom ocelot.common.globals import *\nfrom ocelot.optics.wave import RadiationField, dfl_waistscan\nfrom ocelot.optics.wave import imitate_sase_dfl, dfl2wig, dfl_waistscan, generate_gaussian_dfl, dfl_ap_rect, dfl_ap_circ, dfl_interp, wigner_smear, dfl_chirp_freq\nfrom ocelot.gui.dfl_plot import plot_dfl, plot_wigner, plot_dfl_waistscan\nfrom copy import deepcopy\nfrom ocelot import ocelog\n\nocelog.setLevel(logging.WARNING)\n#ocelog.setLevel(logging.DEBUG)\n#ocelog.setLevel(logging.INFO)\n"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"    initializing ocelot...\n"})}),"\n",(0,i.jsx)(s.h3,{id:"contents",children:"Contents"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#gen_dfl",children:"Generating Gaussian RadiationField"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#plot_radiation_field",children:"Plotting"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#focus_radiation_field",children:"Focusing"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#prop_radiation_field",children:"Propagating"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#dif_on_ap",children:"Aperturing"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#dfl_interp",children:"Interpolating"})}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"#SF_analysis",children:"Space-frequency analysis"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#Wigner",children:"Wigner distribution"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#Compression",children:"Compress the chirped pulse"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#Spectrogram",children:"Spectrogram"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"dfl = RadiationField()\nhelp(RadiationField)\n"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"    Help on class RadiationField in module ocelot.optics.wave:\n    \n    class RadiationField(builtins.object)\n     |  RadiationField(shape=(0, 0, 0))\n     |  \n     |  3d or 2d coherent radiation distribution, *.fld variable is the same as Genesis dfl structure\n     |  \n     |  Methods defined here:\n     |  \n     |  E(self)\n     |      energy in the pulse [J]\n     |  \n     |  Lx(self)\n     |      full transverse horizontal mesh size\n     |  \n     |  Ly(self)\n     |      full transverse vertical mesh size\n     |  \n     |  Lz(self)\n     |      full longitudinal mesh size\n     |  \n     |  Nstat(self)\n     |      number of stat points\n     |  \n     |  Nx(self)\n     |      number of points in x\n     |  \n     |  Ny(self)\n     |      number of points in y\n     |  \n     |  Nz(self)\n     |      number of points in z\n     |  \n     |  __getitem__(self, i)\n     |  \n     |  __init__(self, shape=(0, 0, 0))\n     |      Initialize self.  See help(type(self)) for accurate signature.\n     |  \n     |  __setitem__(self, i, fld)\n     |  \n     |  ang_z_onaxis(self)\n     |      on-axis phase\n     |  \n     |  coh(self, jit=0)\n     |      calculates degree of transverse coherence\n     |      consider downsampling the field first\n     |  \n     |  copy_param(self, dfl1, version=1)\n     |  \n     |  curve_wavefront(self, r=inf, plane='xy', domain_z=None)\n     |      introduction of the additional\n     |      wavefront curvature with radius r\n     |      \n     |      r can be scalar or vector with self.Nz() points\n     |      r>0 -> converging wavefront\n     |      \n     |      plane is the plane in which wavefront is curved:\n     |          'x' - horizontal focusing\n     |          'y' - vertical focusing\n     |          'xy' - focusing in both planes\n     |      \n     |      domain_z is the domain in which wavefront curvature is introduced\n     |          'f' - frequency\n     |          't' - time\n     |          None - original domain (default)\n     |  \n     |  disperse(self, disp=0, E_ph0=None, plane='x', return_orig_domains=True)\n     |      introducing angular dispersion in given plane by deflecting the radaition by given angle depending on its frequency\n     |      disp is the dispertion coefficient [rad/eV]\n     |      E_ph0 is the photon energy in [eV] direction of which would not be changed (principal ray)\n     |  \n     |  domains(self)\n     |      returns domains of the radiation field\n     |  \n     |  event(self, eventn=0)\n     |  \n     |  fft_xy(self, method='mp', nthread=12, **kwargs)\n     |  \n     |  fft_z(self, method='mp', nthread=12, **kwargs)\n     |  \n     |  fileName(self)\n     |  \n     |  int_x(self)\n     |      intensity projection on x\n     |  \n     |  int_xy(self)\n     |  \n     |  int_y(self)\n     |      intensity projection on y\n     |  \n     |  int_z(self)\n     |      intensity projection on z\n     |      power [W] or spectral density [arb.units]\n     |  \n     |  int_zx(self)\n     |  \n     |  int_zy(self)\n     |  \n     |  intensity(self)\n     |      3d intensity, abs(fld)**2\n     |  \n     |  mut_coh_func(self, norm=1, jit=1)\n     |      calculates mutual coherence function\n     |      see Goodman Statistical optics EQs 5.2-7, 5.2-11\n     |      (for instance 1985 edition, in 2nd ed. from 2005 equation numbers are different)\n     |      returns matrix [y,x,y',x']\n     |      consider downsampling the field first\n     |  \n     |  mut_coh_func_c(self, center=(0, 0), norm=1)\n     |      Function to calculate mutual coherence function cenetered at xy position\n     |      \n     |      Parameters\n     |      ----------\n     |      center_xy : tuple, optional\n     |          DESCRIPTION. \n     |          point with respect to which correlation is calculated\n     |          The default is (0,0) (center)\n     |          accepts values either in [m] if domain=='s'\n     |                             or in [rad] if domain=='k'\n     |      norm : TYPE, optional\n     |          DESCRIPTION. \n     |          The default is 1.\n     |          flag of normalization by intensity\n     |      Returns\n     |      -------\n     |      J : TYPE\n     |          mutual coherence function matrix [ny, nx]\n     |  \n     |  ph_sp_dens(self)\n     |  \n     |  phen(self)\n     |  \n     |  prop(self, z, fine=1, return_result=0, return_orig_domains=1, **kwargs)\n     |      Angular-spectrum propagation for fieldfile\n     |      \n     |      can handle wide spectrum\n     |        (every slice in freq.domain is propagated\n     |         according to its frequency)\n     |      no kx**2+ky**2<<k0**2 limitation\n     |      \n     |      dfl is the RadiationField() object\n     |      z is the propagation distance in [m]\n     |      fine=1 is a flag for ~2x faster propagation.\n     |          no Fourier transform to frequency domain is done\n     |          assumes no angular dispersion (true for plain FEL radiation)\n     |          assumes narrow spectrum at center of xlamds (true for plain FEL radiation)\n     |      \n     |      return_result does not modify self, but returns result\n     |      \n     |      z>0 -> forward direction\n     |  \n     |  prop_m(self, z, m=1, fine=1, return_result=0, return_orig_domains=1, **kwargs)\n     |      Angular-spectrum propagation for fieldfile\n     |      \n     |      can handle wide spectrum\n     |        (every slice in freq.domain is propagated\n     |         according to its frequency)\n     |      no kx**2+ky**2<<k0**2 limitation\n     |      \n     |      dfl is the RadiationField() object\n     |      z is the propagation distance in [m]\n     |      m is the output mesh size in terms of input mesh size (m = L_out/L_inp)\n     |      which can be a number m or a pair of number m = [m_x, m_y]\n     |      fine==0 is a flag for ~2x faster propagation.\n     |          no Fourier transform to frequency domain is done\n     |          assumes no angular dispersion (true for plain FEL radiation)\n     |          assumes narrow spectrum at center of xlamds (true for plain FEL radiation)\n     |      \n     |      z>0 -> forward direction\n     |  \n     |  scale_kx(self)\n     |      # propper scales in meters or 2 pi / meters\n     |  \n     |  scale_ky(self)\n     |  \n     |  scale_kz(self)\n     |  \n     |  scale_x(self)\n     |  \n     |  scale_y(self)\n     |  \n     |  scale_z(self)\n     |  \n     |  shape(self)\n     |      returns the shape of fld attribute\n     |  \n     |  slices2stat(self)\n     |  \n     |  stat2slices(self)\n     |  \n     |  tilt(self, angle=0, plane='x', return_orig_domains=True)\n     |      deflects the radaition in given direction by given angle\n     |      by introducing transverse phase chirp\n     |  \n     |  to_domain(self, domains='ts', **kwargs)\n     |      tranfers radiation to specified domains\n     |      *domains is a string with one or two letters:\n     |          (\"t\" or \"f\") and (\"s\" or \"k\")\n     |      where\n     |          't' (time); 'f' (frequency); 's' (space); 'k' (inverse space);\n     |      e.g.\n     |          't'; 'f'; 's'; 'k'; 'ts'; 'fs'; 'tk'; 'fk'\n     |      order does not matter\n     |      \n     |      **kwargs are passed down to self.fft_z and self.fft_xy\n     |  \n     |  ----------------------------------------------------------------------\n     |  Data descriptors defined here:\n     |  \n     |  __dict__\n     |      dictionary for instance variables (if defined)\n     |  \n     |  __weakref__\n     |      list of weak references to the object (if defined)\n"})}),"\n",(0,i.jsx)("a",{id:"gen_dfl"}),"\n",(0,i.jsx)(s.h3,{id:"generating-gaussian-radiationfield",children:"Generating Gaussian RadiationField"}),"\n",(0,i.jsx)(s.p,{children:"We will demonstrate capabilities of this object using a model gaussian beam. The 3D gaussian beam radiation pulse can be defined with the following arguments:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"help(generate_gaussian_dfl)\n\nE_pohoton = 8000 #central photon energy [eV]\nkwargs={'xlamds':(h_eV_s * speed_of_light / E_pohoton), #[m] - central wavelength\n        'shape':(301,301,10),           #(x,y,z) shape of field matrix (reversed) to dfl.fld\n        'dgrid':(500e-6,500e-6,1e-6), #(x,y,z) [m] - size of field matrix\n        'power_rms':(3e-6,10e-6,0.1e-6),#(x,y,z) [m] - rms size of the radiation distribution (gaussian)\n        'power_center':(0,0,None),     #(x,y,z) [m] - position of the radiation distribution\n        'power_angle':(0,0),           #(x,y) [rad] - angle of further radiation propagation\n        'power_waistpos':(-5,-15),     #(Z_x,Z_y) [m] downstrean location of the waist of the beam\n        'wavelength':None,             #central frequency of the radiation, if different from xlamds\n        'zsep':None,                   #distance between slices in z as zsep*xlamds\n        'freq_chirp':0,                #dw/dt=[1/fs**2] - requency chirp of the beam around power_center[2]\n        'en_pulse':None,               #total energy or max power of the pulse, use only one\n        'power':1e6,\n        }\ndfl = generate_gaussian_dfl(**kwargs);\n"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"    Help on function generate_gaussian_dfl in module ocelot.optics.wave:\n    \n    generate_gaussian_dfl(xlamds=1e-09, shape=(51, 51, 100), dgrid=(0.001, 0.001, 5e-05), power_rms=(0.0001, 0.0001, 5e-06), power_center=(0, 0, None), power_angle=(0, 0), power_waistpos=(0, 0), wavelength=None, zsep=None, freq_chirp=0, en_pulse=None, power=1000000.0, **kwargs)\n        generates RadiationField object\n        narrow-bandwidth, paraxial approximations\n        \n        xlamds [m] - central wavelength\n        shape (x,y,z) - shape of field matrix (reversed) to dfl.fld\n        dgrid (x,y,z) [m] - size of field matrix\n        power_rms (x,y,z) [m] - rms size of the radiation distribution (gaussian)\n        power_center (x,y,z) [m] - position of the radiation distribution\n        power_angle (x,y) [rad] - angle of further radiation propagation\n        power_waistpos (x,y) [m] downstrean location of the waist of the beam\n        wavelength [m] - central frequency of the radiation, if different from xlamds\n        zsep (integer) - distance between slices in z as zsep*xlamds\n        freq_chirp dw/dt=[1/fs**2] - requency chirp of the beam around power_center[2]\n        en_pulse, power = total energy or max power of the pulse, use only one\n    \n"})}),"\n",(0,i.jsxs)(s.p,{children:["The RadiationField object is a 3D data cube in dfl.fld attribute (numpy array) with a ",(0,i.jsx)(s.code,{children:"dfl.fld.shape = dfl.shape() = (Nz, Nx, Ny)"})," and a grid step for each axis ",(0,i.jsx)(s.code,{children:"dfl.dx , dfl.dy , dfl.dz"})," so that ",(0,i.jsx)(s.code,{children:"dgrid[0], dgrid[1], dgrid[2] = dx*Nx, dy*Ny, dz*Nz"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"We created the gaussian beam with location of its horizontal waist at -5 meters and vertical waist at -15 meters location (wavefront is divergent now)"}),"\n",(0,i.jsx)("a",{id:"plot_radiation_field"}),"\n",(0,i.jsx)(s.h2,{id:"plotting",children:"Plotting"}),"\n",(0,i.jsxs)(s.p,{children:["To visulize the radiation one can use ",(0,i.jsx)(s.code,{children:"plot_dfl()"})," function. There is an option to plot the radiation in what domain you want (transverse: ",(0,i.jsx)(s.code,{children:"'s'"}),"pace and ",(0,i.jsx)(s.code,{children:"'k'"}),"-inverse space, longitudinal: ",(0,i.jsx)(s.code,{children:"'t'"}),"ime and ",(0,i.jsx)(s.code,{children:"'f'"}),"requency) and any combination of them."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"help(plot_dfl)\n\nplot_dfl(dfl, #RadiationField() object\n         domains=None, #longitudinal domain + transverse domain ('t' or 'f' + 's' or 'k') \n                       #(example: 'tk' - time/inversespace domain)\n         z_lim=[],     #sets the boundaries to CUT the dfl object in z to ranges of e.g. [2,5] um or nm depending on freq_domain=False of True\n         xy_lim=[],    #sets the boundaries to SCALE the dfl object in x and y to ranges of e.g. [2,5] um or urad depending on far_field=False of True\n         figsize=4,    #rescales the size of the figure\n         cmap='viridis',    #colormap which will be used for plotting (http://matplotlib.org/users/colormaps.html)\n         phase=True,   #bool type variable, can replace Z projection or spectrum with phase front distribution z dimensions correspondingly\n         fig_name='default_dfl_plot', #the desired name of the output figure, would be used as suffix to the image filename if savefig==True\n         auto_zoom=False,  #bool type variable, automatically scales xyz the images to the (1%?) of the intensity limits\n         column_3d=True,   #bool type variable, plots top and side views of the radiation distribution\n         savefig=False,    #bool type variable, allow to save figure to image (savefig='png' (default) or savefig='eps', etc...)\n         showfig=True,     #bool type variable, allow to display figure (slower)\n         return_proj=False,#bool type variable, returns [xy_proj,yz_proj,xz_proj,x,y,z] array.\n         line_off_xy=True, #bool type variable, if True, the transverse size of radiation are calculated at x=0 and y=0 position, otherwise marginal distributions are provided\n         log_scale=0,      #bool type variable, if True, log scale will be used for potting\n         cmap_cutoff=0)   #0 <= cmap_cutoff <= 1; all pixels that have intensity lower than cmap_cutoff will be seted to white color\n"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"    Help on function plot_dfl in module ocelot.gui.dfl_plot:\n    \n    plot_dfl(dfl, domains=None, z_lim=[], xy_lim=[], figsize=4, cmap='viridis', legend=True, phase=False, fig_name=None, auto_zoom=False, column_3d=True, savefig=False, showfig=True, return_proj=False, line_off_xy=True, slice_xy=False, log_scale=0, cmap_cutoff=0, vartype_dfl=None, plot_sp_dens=True, event=None, **kwargs)\n        Plots dfl radiation object in 3d using matplotlib.\n        \n        :param dfl: RadiationField() object\n        :param domains: longitudinal domain + transverse domain ('t' or 'f' + 's' or 'k') (example: 'tk' - time/inversespace domain)\n        :param z_lim: sets the boundaries to CUT the dfl object in z to ranges of e.g. [2,5] um or nm depending on freq_domain=False of True\n        :param xy_lim: sets the boundaries to SCALE the dfl object in x and y to ranges of e.g. [2,5] um or urad depending on far_field=False of True\n        :param figsize: rescales the size of the figure\n        :param cmap: color map which will be used for plotting (http://matplotlib.org/users/colormaps.html)\n        :param legend: not used yet\n        :param phase: bool type variable, can replace Z projection or spectrum with phase front distribution z dimensions correspondingly\n        :param fig_name: the desired name of the output figure, would be used as suffix to the image filename if savefig==True\n        :param auto_zoom: bool type variable, automatically scales xyz the images to the (1%?) of the intensity limits\n        :param column_3d: bool type variable, plots top and side views of the radiation distribution\n        :param savefig: bool type variable, allow to save figure to image (savefig='png' (default) or savefig='eps', etc...)\n        :param showfig: bool type variable, allow to display figure (slower)\n        :param return_proj: bool type variable, returns [xy_proj,yz_proj,xz_proj,x,y,z] array.\n        :param line_off_xy: bool type variable, if True, the transverse size of radiation are calculated at x=0 and y=0 position, otherwise marginal distribution are used\n        :param slice_xy: bool type variable, if True, slices will be plotted; if False, projections will be plotted\n        :param log_scale: bool type variable, if True, log scale will be used for potting\n        :param cmap_cutoff: 0 <= cmap_cutoff <= 1; all pixels that have intensity lower than cmap_cutoff will be seted to white color\n        :param vartype_dfl: the data type to store dfl in memory [either complex128 (two 64-bit floats) or complex64 (two 32-bit floats)], may save memory (deprecated)\n        :param plot_sp_dens: whether to recalculate spectral density in units of mJ/eV\n        :param event: allows to choolse which statistical realization (element of dfl.fld_stat=[]) we wish to plot\n        :param kwargs: \n        :return:\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"png",src:n(7862).A+"",width:"1665",height:"1025"})}),"\n",(0,i.jsx)(s.p,{children:"Plotting radiation in inverse space - frequency domain"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"plot_dfl(dfl, domains='kf')\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"png",src:n(6641).A+"",width:"1654",height:"1029"})}),"\n",(0,i.jsx)("a",{id:"focus_radiation_field"}),"\n",(0,i.jsx)(s.h2,{id:"focusing",children:"Focusing"}),"\n",(0,i.jsx)(s.p,{children:"Apply additional curvature to the radiation field wavefront along the given plane: 'x' or 'y'\nHere we collimate the radiation in 'x' direction. Note the different radius of curvature needed to collimate the beam, compared to the distance from the waist in Gaussian beam."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"help(RadiationField().curve_wavefront)\n\ndfl0 = deepcopy(dfl)\nplot_dfl(dfl0, column_3d=False, phase=True)\ndfl0.curve_wavefront(r=5.1, plane='x')\nplot_dfl(dfl0, column_3d=False, phase=True)\n"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"    Help on method curve_wavefront in module ocelot.optics.wave:\n    \n    curve_wavefront(r=inf, plane='xy', domain_z=None) method of ocelot.optics.wave.RadiationField instance\n        introduction of the additional\n        wavefront curvature with radius r\n        \n        r can be scalar or vector with self.Nz() points\n        r>0 -> converging wavefront\n        \n        plane is the plane in which wavefront is curved:\n            'x' - horizontal focusing\n            'y' - vertical focusing\n            'xy' - focusing in both planes\n        \n        domain_z is the domain in which wavefront curvature is introduced\n            'f' - frequency\n            't' - time\n            None - original domain (default)\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"png",src:n(4258).A+"",width:"1062",height:"1025"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"png",src:n(7193).A+"",width:"1062",height:"1025"})}),"\n",(0,i.jsx)("a",{id:"prop_radiation_field"}),"\n",(0,i.jsx)(s.h2,{id:"propagating",children:"Propagating"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"RadiationField()"})," class has a  Fresnel Transfer Function Propagator method ",(0,i.jsx)(s.code,{children:"RadiationField().prop(z, fine=1, return_result=0, return_orig_domains=1)"})," which calculates the radiation distribution at some distance ",(0,i.jsx)(s.code,{children:"z"})," with the exact free space response function ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"H"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"k"}),(0,i.jsx)(s.mi,{children:"x"})]}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"k"}),(0,i.jsx)(s.mi,{children:"y"})]}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mi,{children:"z"}),(0,i.jsx)(s.mo,{stretchy:"false",children:")"}),(0,i.jsx)(s.mo,{children:"="}),(0,i.jsx)(s.mi,{children:"exp"}),(0,i.jsx)(s.mo,{children:"\u2061"}),(0,i.jsx)(s.mo,{fence:"false",stretchy:"true",minsize:"2.4em",maxsize:"2.4em",children:"["}),(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"k"}),(0,i.jsx)(s.mn,{children:"0"})]}),(0,i.jsx)(s.mi,{children:"z"}),(0,i.jsx)(s.msqrt,{children:(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mn,{children:"1"}),(0,i.jsx)(s.mo,{children:"\u2212"}),(0,i.jsx)(s.mstyle,{displaystyle:"true",scriptlevel:"0",children:(0,i.jsxs)(s.mfrac,{children:[(0,i.jsxs)(s.msubsup,{children:[(0,i.jsx)(s.mi,{children:"k"}),(0,i.jsx)(s.mi,{children:"x"}),(0,i.jsx)(s.mn,{children:"2"})]}),(0,i.jsxs)(s.msubsup,{children:[(0,i.jsx)(s.mi,{children:"k"}),(0,i.jsx)(s.mn,{children:"0"}),(0,i.jsx)(s.mn,{children:"2"})]})]})}),(0,i.jsx)(s.mo,{children:"\u2212"}),(0,i.jsx)(s.mstyle,{displaystyle:"true",scriptlevel:"0",children:(0,i.jsxs)(s.mfrac,{children:[(0,i.jsxs)(s.msubsup,{children:[(0,i.jsx)(s.mi,{children:"k"}),(0,i.jsx)(s.mi,{children:"y"}),(0,i.jsx)(s.mn,{children:"2"})]}),(0,i.jsxs)(s.msubsup,{children:[(0,i.jsx)(s.mi,{children:"k"}),(0,i.jsx)(s.mn,{children:"0"}),(0,i.jsx)(s.mn,{children:"2"})]})]})})]})}),(0,i.jsx)(s.mo,{fence:"false",stretchy:"true",minsize:"2.4em",maxsize:"2.4em",children:"]"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"H(k_x, k_y, z) = \\exp\\bigg[ik_0z\\sqrt{1 - \\cfrac{k^2_x}{k^2_0} - \\cfrac{k^2_y}{k^2_0}} \\bigg]"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1.0361em",verticalAlign:"-0.2861em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.08125em"},children:"H"}),(0,i.jsx)(s.span,{className:"mopen",children:"("}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.1514em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.0315em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mathnormal mtight",children:"x"})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.1514em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.0315em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mathnormal mtight",style:{marginRight:"0.03588em"},children:"y"})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.2861em"},children:(0,i.jsx)(s.span,{})})})]})})]}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.04398em"},children:"z"}),(0,i.jsx)(s.span,{className:"mclose",children:")"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(s.span,{className:"mrel",children:"="}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"3.04em",verticalAlign:"-1.1196em"}}),(0,i.jsx)(s.span,{className:"mop",children:"exp"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord",children:(0,i.jsx)(s.span,{className:"delimsizing size3",children:"["})}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3011em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.0315em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"0"})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.04398em"},children:"z"}),(0,i.jsx)(s.span,{className:"mord sqrt",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsxs)(s.span,{className:"vlist",style:{height:"1.9204em"},children:[(0,i.jsxs)(s.span,{className:"svg-align",style:{top:"-5em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"5em"}}),(0,i.jsxs)(s.span,{className:"mord",style:{paddingLeft:"1em"},children:[(0,i.jsx)(s.span,{className:"mord",children:"1"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mopen nulldelimiter"}),(0,i.jsx)(s.span,{className:"mfrac",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsxs)(s.span,{className:"vlist",style:{height:"1.59em"},children:[(0,i.jsxs)(s.span,{style:{top:"-2.314em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,i.jsx)(s.span,{className:"mord",children:(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsxs)(s.span,{className:"vlist",style:{height:"0.7959em"},children:[(0,i.jsxs)(s.span,{style:{top:"-2.4337em",marginLeft:"-0.0315em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"0"})})]}),(0,i.jsxs)(s.span,{style:{top:"-3.0448em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"2"})})]})]}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.2663em"},children:(0,i.jsx)(s.span,{})})})]})})]})})]}),(0,i.jsxs)(s.span,{style:{top:"-3.23em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,i.jsx)(s.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})]}),(0,i.jsxs)(s.span,{style:{top:"-3.74em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,i.jsx)(s.span,{className:"mord",children:(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsxs)(s.span,{className:"vlist",style:{height:"0.8141em"},children:[(0,i.jsxs)(s.span,{style:{top:"-2.453em",marginLeft:"-0.0315em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mathnormal mtight",children:"x"})})]}),(0,i.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"2"})})]})]}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.247em"},children:(0,i.jsx)(s.span,{})})})]})})]})})]})]}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.9523em"},children:(0,i.jsx)(s.span,{})})})]})}),(0,i.jsx)(s.span,{})]}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mopen nulldelimiter"}),(0,i.jsx)(s.span,{className:"mfrac",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsxs)(s.span,{className:"vlist",style:{height:"1.6231em"},children:[(0,i.jsxs)(s.span,{style:{top:"-2.314em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,i.jsx)(s.span,{className:"mord",children:(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsxs)(s.span,{className:"vlist",style:{height:"0.7959em"},children:[(0,i.jsxs)(s.span,{style:{top:"-2.4337em",marginLeft:"-0.0315em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"0"})})]}),(0,i.jsxs)(s.span,{style:{top:"-3.0448em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"2"})})]})]}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.2663em"},children:(0,i.jsx)(s.span,{})})})]})})]})})]}),(0,i.jsxs)(s.span,{style:{top:"-3.23em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,i.jsx)(s.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})]}),(0,i.jsxs)(s.span,{style:{top:"-3.7731em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,i.jsx)(s.span,{className:"mord",children:(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsxs)(s.span,{className:"vlist",style:{height:"0.8141em"},children:[(0,i.jsxs)(s.span,{style:{top:"-2.453em",marginLeft:"-0.0315em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mathnormal mtight",style:{marginRight:"0.03588em"},children:"y"})})]}),(0,i.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"2"})})]})]}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3831em"},children:(0,i.jsx)(s.span,{})})})]})})]})})]})]}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.9523em"},children:(0,i.jsx)(s.span,{})})})]})}),(0,i.jsx)(s.span,{})]})]})]}),(0,i.jsxs)(s.span,{style:{top:"-3.8804em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"5em"}}),(0,i.jsx)(s.span,{className:"hide-tail",style:{minWidth:"1.02em",height:"3.08em"},children:(0,i.jsx)(s.svg,{xmlns:"http://www.w3.org/2000/svg",width:"400em",height:"3.08em",viewBox:"0 0 400000 3240",preserveAspectRatio:"xMinYMin slice",children:(0,i.jsx)(s.path,{d:"M473,2793\nc339.3,-1799.3,509.3,-2700,510,-2702 l0 -0\nc3.3,-7.3,9.3,-11,18,-11 H400000v40H1017.7\ns-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200\nc0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26\ns76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,\n606zM1001 80h400000v40H1017.7z"})})})]})]}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"1.1196em"},children:(0,i.jsx)(s.span,{})})})]})}),(0,i.jsx)(s.span,{className:"mord",children:(0,i.jsx)(s.span,{className:"delimsizing size3",children:"]"})})]})]})]}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["So that the field ad distance ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"z"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"z"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.04398em"},children:"z"})]})})]})," would be ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"E"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsx)(s.mi,{children:"x"}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mi,{children:"y"}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mi,{children:"z"}),(0,i.jsx)(s.mo,{separator:"true",children:";"}),(0,i.jsx)(s.mi,{children:"t"}),(0,i.jsx)(s.mo,{stretchy:"false",children:")"}),(0,i.jsx)(s.mo,{children:"="}),(0,i.jsxs)(s.msup,{children:[(0,i.jsx)(s.mi,{mathvariant:"script",children:"F"}),(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mo,{children:"\u2212"}),(0,i.jsx)(s.mn,{children:"1"})]})]}),(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mo,{fence:"true",children:"{"}),(0,i.jsx)(s.mi,{mathvariant:"script",children:"F"}),(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mo,{fence:"true",children:"{"}),(0,i.jsx)(s.mi,{children:"E"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsx)(s.mi,{children:"x"}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mi,{children:"y"}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mn,{children:"0"}),(0,i.jsx)(s.mo,{separator:"true",children:";"}),(0,i.jsx)(s.mi,{children:"t"}),(0,i.jsx)(s.mo,{stretchy:"false",children:")"}),(0,i.jsx)(s.mo,{fence:"true",children:"}"})]}),(0,i.jsx)(s.mi,{children:"H"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"k"}),(0,i.jsx)(s.mi,{children:"x"})]}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"k"}),(0,i.jsx)(s.mi,{children:"y"})]}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mi,{children:"z"}),(0,i.jsx)(s.mo,{stretchy:"false",children:")"}),(0,i.jsx)(s.mo,{fence:"true",children:"}"})]})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"E(x,y,z; t) = \\mathscr{F}^{-1}\\left\\{\\mathscr{F}\\left\\{E(x,y,0; t)\\right\\}H(k_x, k_y, z)\\right\\}"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05764em"},children:"E"}),(0,i.jsx)(s.span,{className:"mopen",children:"("}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.04398em"},children:"z"}),(0,i.jsx)(s.span,{className:"mpunct",children:";"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(s.span,{className:"mclose",children:")"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(s.span,{className:"mrel",children:"="}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1.1002em",verticalAlign:"-0.2861em"}}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathscr",style:{marginRight:"0.13634em"},children:"F"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsx)(s.span,{className:"vlist-t",children:(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,i.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(s.span,{className:"mord mtight",children:[(0,i.jsx)(s.span,{className:"mord mtight",children:"\u2212"}),(0,i.jsx)(s.span,{className:"mord mtight",children:"1"})]})})]})})})})})]}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(s.span,{className:"minner",children:[(0,i.jsx)(s.span,{className:"mopen delimcenter",style:{top:"0em"},children:"{"}),(0,i.jsx)(s.span,{className:"mord mathscr",style:{marginRight:"0.13634em"},children:"F"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(s.span,{className:"minner",children:[(0,i.jsx)(s.span,{className:"mopen delimcenter",style:{top:"0em"},children:"{"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05764em"},children:"E"}),(0,i.jsx)(s.span,{className:"mopen",children:"("}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord",children:"0"}),(0,i.jsx)(s.span,{className:"mpunct",children:";"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(s.span,{className:"mclose",children:")"}),(0,i.jsx)(s.span,{className:"mclose delimcenter",style:{top:"0em"},children:"}"})]}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.08125em"},children:"H"}),(0,i.jsx)(s.span,{className:"mopen",children:"("}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.1514em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.0315em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mathnormal mtight",children:"x"})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.1514em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.0315em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mathnormal mtight",style:{marginRight:"0.03588em"},children:"y"})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.2861em"},children:(0,i.jsx)(s.span,{})})})]})})]}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.04398em"},children:"z"}),(0,i.jsx)(s.span,{className:"mclose",children:")"}),(0,i.jsx)(s.span,{className:"mclose delimcenter",style:{top:"0em"},children:"}"})]})]})]})]})," (see e.g. ",(0,i.jsx)(s.em,{children:"Voelz, David George. Computational fourier optics: a MATLAB tutorial. Bellingham, WA: SPIE press, 2011"}),")"]}),"\n",(0,i.jsx)(s.p,{children:"The method accepts the following parameters:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"z"})," - propagation distance [m]; z>0 corresponds to forward direction"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"fine"})," is an accuracy parameter. if ",(0,i.jsx)(s.code,{children:"fine==0"}),", no Fourier transform to frequency domain is done, allows 2x faster calculation applicable for plain SASE radiation."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"return_orig_domains"})," is ",(0,i.jsx)(s.code,{children:"True"})," by default, otherwise, time is spared"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"We propagate the field to its horizontal waist."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"dfl0 = deepcopy(dfl)\ndfl0.prop(z=-5) #propagation distance [m]\nplot_dfl(dfl0, fig_name='dfl_prop', phase=True, column_3d=False)\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"png",src:n(3276).A+"",width:"1062",height:"1025"})}),"\n",(0,i.jsxs)(s.p,{children:["One can change the grid spacing in the resulting plane upon propagation, using Angular-Spectrum Propagation with scaling parameter ",(0,i.jsx)(s.code,{children:"m"}),", see ",(0,i.jsx)(s.em,{children:'Schmidt, Jason Daniel. "Numerical simulation of optical wave propagation with examples in MATLAB" Bellingham, Washington, USA: SPIE, 2010'}),". Effectively it is done via manipulation of waverfont curvatures before and after the propagation.\nThe corresponding method ",(0,i.jsx)(s.code,{children:".prop_m(z, m=1, fine=1, return_result=0, return_orig_domains=1)"})," has an additional parameter"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"m"})," - the output mesh size in terms of input mesh size (m = L_out/L_inp). I can be a single number or a tuple ",(0,i.jsx)(s.code,{children:"m=(m_x, m_y)"})," to account for asymmetric scaling."]}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"dfl0 = deepcopy(dfl)\ndfl0.prop_m(z=-5, #propagation distance [m]\n            m=0.3   #mesh resize coefficient\n            #m=(0.05,0.3)   #asymmetric resize\n            )\nplot_dfl(dfl0, fig_name='dfl_prop', phase=True, column_3d=False)\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"png",src:n(7910).A+"",width:"1048",height:"1025"})}),"\n",(0,i.jsxs)(s.p,{children:["The OCELOT toolkit has a function that scans transverse radiation size (fwhm, std), and power density (on-axis and maximum values) over the defined radiation propogation span with ",(0,i.jsx)(s.code,{children:".prop()"})," method. This may allow one to determine e.g. the location of the radiation source inside the undulator."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"help(dfl_waistscan)\nw_scan = dfl_waistscan(dfl, \n                       z_pos=np.linspace(-15,10,80), \n                       projection=0)\n\nplot_dfl_waistscan(w_scan, \n                   fig_name='waist scan results', \n                   showfig=True, \n                   savefig=False)\n"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"    Help on function dfl_waistscan in module ocelot.optics.wave:\n    \n    dfl_waistscan(dfl, z_pos, projection=0, **kwargs)\n        propagates the RadaitionField object dfl\n        through the sequence of positions z_pos\n        and calculates transverse distribution parameters\n        such as peak photon density and sizes in both dimensions\n        \n        if projection==1, then size of projection is calculated\n            otherwise - size across the central line passing through the mesh center\n    \n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"png",src:n(8718).A+"",width:"1123",height:"689"})}),"\n",(0,i.jsx)("a",{id:"dif_on_ap"}),"\n",(0,i.jsx)(s.h2,{id:"aperturing",children:"Aperturing"}),"\n",(0,i.jsx)(s.p,{children:"One can introduce a rectangular of a circular aperture and propagate the radiation through it."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"dfl0 = deepcopy(dfl)\n\ndfl0 = dfl_ap_rect(dfl0, ap_x=5e-5, ap_y=3e-5) #x and y sizes in [m]\n#dfl0 = dfl_ap_circ(dfl0, r=1e-5)\n\nplot_dfl(dfl0, fig_name='dfl_ap', phase=True, column_3d=False)\n#dfl0.prop_m(z=150, m=20)\n#plot_dfl(dfl0, fig_name='dfl_ap_prop', phase=True, column_3d=False)\nplot_dfl(dfl0, domains = 'kt', fig_name='dfl_ap_prop', phase=True, column_3d=False, log_scale=0)\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"png",src:n(5554).A+"",width:"1062",height:"1025"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"png",src:n(9211).A+"",width:"1052",height:"1025"})}),"\n",(0,i.jsx)("a",{id:"dfl_interp"}),"\n",(0,i.jsx)(s.h2,{id:"interpolating",children:"Interpolating"}),"\n",(0,i.jsxs)(s.p,{children:["RaidationField can be interpolated with ",(0,i.jsx)(s.code,{children:"dfl_interp()"})," function."]}),"\n",(0,i.jsxs)(s.p,{children:["When ",(0,i.jsx)(s.code,{children:"newN"})," and ",(0,i.jsx)(s.code,{children:"newL"})," are not None, ",(0,i.jsx)(s.code,{children:"interpN"})," and ",(0,i.jsx)(s.code,{children:"interpL"})," values are ignored."]}),"\n",(0,i.jsxs)(s.p,{children:["Here ",(0,i.jsx)(s.code,{children:"scipy.interpolate.interp2d"})," method is used"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"help(dfl_interp)\n\ndfl0 = deepcopy(dfl)\nprint('N_points before interpolation (Nz,Ny,Nx): {:}'.format(dfl0.shape()))\nplot_dfl(dfl0, domains = 'st', fig_name='not interpolated', phase=True, column_3d=False)\n\ndfl0 = dfl_interp(dfl0, \n                  #interpN=(2, 0.5), #scaling the transverse point density (x,y)\n                  #interpL=(1, 1), #scaling the transverse mesh (x,y)\n                  newN=(209, 151), #new number of points (x,y)\n                  newL=(100e-6, 200e-6), #new mesh size (x,y)\n                  method='cubic', #interpolation method\n                  return_result=1 #if 0 - mutates the object, if 1 - returns the result\n                 )\n\nprint('N_points after interpolation (Nz,Ny,Nx): {:}'.format(dfl0.shape()))\nplot_dfl(dfl0, domains = 'st', fig_name='interpolated', phase=True, column_3d=False)\n"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"    Help on function dfl_interp in module ocelot.optics.wave:\n    \n    dfl_interp(dfl, interpN=(1, 1), interpL=(1, 1), newN=(None, None), newL=(None, None), method='cubic', return_result=1, **kwargs)\n        2d interpolation of the coherent radiation distribution\n        interpN and interpL define the desired interpolation coefficients for\n        transverse point __density__ and transverse mesh __size__ correspondingly\n        newN and newL define the final desire number of points and size of the mesh\n        when newN and newL are not None interpN and interpL values are ignored\n        coordinate convention is (x,y)\n    \n    N_points before interpolation (Nz,Ny,Nx): (10, 301, 301)\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"png",src:n(2684).A+"",width:"1062",height:"1025"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"    N_points after interpolation (Nz,Ny,Nx): (10, 151, 209)\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"png",src:n(3950).A+"",width:"1062",height:"1025"})}),"\n",(0,i.jsx)("a",{id:"SF_analysis"}),"\n",(0,i.jsx)(s.h2,{id:"space-frequency-analysis-and-manipulation",children:"Space-Frequency analysis and manipulation"}),"\n",(0,i.jsx)("a",{id:"Wigner"}),"\n",(0,i.jsx)(s.h3,{id:"calculating-on-axis-wigner-distribution",children:"Calculating on-axis Wigner distribution"}),"\n",(0,i.jsx)(s.p,{children:"let's generate a frequency-chirped radiation field"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"E_pohoton = 8000 #central photon energy [eV]\nkwargs={'xlamds':(h_eV_s * speed_of_light / E_pohoton), #[m] - central wavelength\n        'shape':(3,3,1000),           #(x,y,z) shape of field matrix (reversed) to dfl.fld\n        'dgrid':(1e-6,1e-6,5e-6), #(x,y,z) [m] - size of field matrix\n        'power_rms':(3e-6,3e-6,0.5e-6),#(x,y,z) [m] - rms size of the radiation distribution (gaussian)\n        'freq_chirp':0.8,                #dw/dt=[1/fs**2] - requency chirp of the beam around power_center[2]\n        }\ndfl = generate_gaussian_dfl(**kwargs);  #Gaussian beam defenition\n"})}),"\n",(0,i.jsxs)(s.p,{children:["and calculate a Wigner distribution of the on-axis radiation with ",(0,i.jsx)(s.code,{children:"dfl2wig()"})," function"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"help(dfl2wig)\nwig = dfl2wig(dfl,\n                 pad=1 # pads the radiation field values with zeros to increase number of points in <pad> times\n                )\n"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"    Help on function dfl2wig in module ocelot.optics.wave:\n    \n    dfl2wig(dfl, method='mp', pad=1, domain='t', **kwargs)\n        returns on-axis WignerDistribution from dfl file\n"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"help(plot_wigner)\nplot_wigner(wig, \n            x_units='um',\n            y_units='ev',\n            x_lim=(None, None),\n            y_lim=(None, None),\n            downsample=1,\n            autoscale=None,\n            figsize=3,\n            cmap='seismic',\n            fig_name=None,\n            savefig=False,\n            showfig=True,\n            plot_proj=1, \n            plot_text=1,\n            plot_moments=0,\n            plot_cbar=0,\n            log_scale=0,\n            )\n"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"    Help on function plot_wigner in module ocelot.gui.dfl_plot:\n    \n    plot_wigner(wig_or_out, *args, **kwargs)\n        calls plot_wigner_z or plot_wigner_u depending on domain in the wigner\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"png",src:n(5551).A+"",width:"1124",height:"821"})}),"\n",(0,i.jsx)("a",{id:"Compression"}),"\n",(0,i.jsx)(s.h3,{id:"compress-the-chirped-pulse",children:"Compress the chirped pulse"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"help(dfl_chirp_freq)\n\ndfl_ch = dfl_chirp_freq(dfl, \n               coeff=(0, 0, 0.099), #coeff[2] is the group delay dispersion (GDD)\n               E_ph0=None, \n               return_result=True)\n\nplot_wigner(dfl2wig(dfl_ch))\n"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"    Help on function dfl_chirp_freq in module ocelot.optics.wave:\n    \n    dfl_chirp_freq(dfl, coeff, E_ph0=None, return_result=False)\n        The function adds a phase shift to a fld object. The expression for the phase see in the calc_phase_delay function\n        dfl   --- is a fld object\n        coeff --- coefficients in phase (see in the calc_phase_delay function)\n        E_ph0 --- energy with respect to which the phase shift is calculated\n        return_result --- a flag that is responsible for returning the modified dfl object if it is True or\n                          change the dfl function parameter if it is False\n    \n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"png",src:n(381).A+"",width:"1086",height:"844"})}),"\n",(0,i.jsx)("a",{id:"Spectrogram"}),"\n",(0,i.jsx)(s.h3,{id:"calculating-spectrogtam",children:"Calculating Spectrogtam"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"help(wigner_smear)\nspectrogram = wigner_smear(wig, sigma_s=0.1e-6)\nplot_wigner(spectrogram, figsize=2, plot_proj=0)\n"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"    Help on function wigner_smear in module ocelot.optics.wave:\n    \n    wigner_smear(wig, sigma_s)\n        Convolves wigner distribution with gaussian window function to obtain spectrogram, see https://arxiv.org/pdf/1811.11446.pdf\n        \n        :param wig: ocelot.optics.wave.WignerDistribution object which will be convolved with generated window func\n        :param sigma_s: [meters] rms size of the s=-ct the gaussian window func\n        :return: convolved ocelot.optics.wave.WignerDistribution object with gaussian window function\n    \n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"png",src:n(7483).A+"",width:"811",height:"577"})})]})}function m(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},7862:(e,s,n)=>{n.d(s,{A:()=>a});const a=n.p+"assets/images/pfs_2_radiation_field_10_1-14c16c63771ad513afa6a27b8ed25537.png"},6641:(e,s,n)=>{n.d(s,{A:()=>a});const a=n.p+"assets/images/pfs_2_radiation_field_12_0-55744ca4f5a03d9085fd9d5aa6f4159c.png"},4258:(e,s,n)=>{n.d(s,{A:()=>a});const a=n.p+"assets/images/pfs_2_radiation_field_14_1-cf184c8455650aa26b62f633793c68e0.png"},7193:(e,s,n)=>{n.d(s,{A:()=>a});const a=n.p+"assets/images/pfs_2_radiation_field_14_2-eeb019597ae3745bce5dbb79b9b9059d.png"},3276:(e,s,n)=>{n.d(s,{A:()=>a});const a=n.p+"assets/images/pfs_2_radiation_field_17_0-e07382decad60ec709b260ad5440f863.png"},7910:(e,s,n)=>{n.d(s,{A:()=>a});const a=n.p+"assets/images/pfs_2_radiation_field_19_0-381fb8711f647fb55dd259bb2c54ec82.png"},8718:(e,s,n)=>{n.d(s,{A:()=>a});const a=n.p+"assets/images/pfs_2_radiation_field_21_1-01a80d2f9923a16bd3075a1fe5ab8ac5.png"},5554:(e,s,n)=>{n.d(s,{A:()=>a});const a=n.p+"assets/images/pfs_2_radiation_field_24_0-d18e61c0af820340df969c9413cf37cb.png"},9211:(e,s,n)=>{n.d(s,{A:()=>a});const a=n.p+"assets/images/pfs_2_radiation_field_24_1-c7693048822345c048b145a60fe5b8f0.png"},2684:(e,s,n)=>{n.d(s,{A:()=>a});const a=n.p+"assets/images/pfs_2_radiation_field_27_1-cf184c8455650aa26b62f633793c68e0.png"},3950:(e,s,n)=>{n.d(s,{A:()=>a});const a=n.p+"assets/images/pfs_2_radiation_field_27_3-9f0bfe78170b9ec1ef41688d0e6ad77d.png"},5551:(e,s,n)=>{n.d(s,{A:()=>a});const a=n.p+"assets/images/pfs_2_radiation_field_33_1-3c65fe5eedce1fb3346744fb6a023689.png"},381:(e,s,n)=>{n.d(s,{A:()=>a});const a=n.p+"assets/images/pfs_2_radiation_field_35_1-f101c2dbb3045dbfb281d25f4aacaffd.png"},7483:(e,s,n)=>{n.d(s,{A:()=>a});const a=n.p+"assets/images/pfs_2_radiation_field_37_1-1ebaceeefbe7fe48aeffde3d02cc0b98.png"},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>r});var a=n(6540);const i={},t=a.createContext(i);function l(e){const s=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(t.Provider,{value:s},e.children)}}}]);