"use strict";(self.webpackChunkocelot_website=self.webpackChunkocelot_website||[]).push([[7589],{32:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"docu/OCELOT fundamentals/twiss","title":"Twiss","description":"L46) Class","source":"@site/docs/docu/OCELOT fundamentals/twiss.md","sourceDirName":"docu/OCELOT fundamentals","slug":"/docu/OCELOT fundamentals/twiss","permalink":"/docs/docu/OCELOT fundamentals/twiss","draft":false,"unlisted":false,"editUrl":"https://github.com/ocelot-collab/ocelot-collab.github.io/tree/main/docs/docu/OCELOT fundamentals/twiss.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9,"title":"Twiss"},"sidebar":"docsSidebar","previous":{"title":"ParticleArray","permalink":"/docs/docu/OCELOT fundamentals/particle-array"},"next":{"title":"Matching","permalink":"/docs/docu/OCELOT fundamentals/matching"}}');var n=i(4848),r=i(8453);const l={sidebar_position:9,title:"Twiss"},o="Twiss Class",c={},a=[{value:"Description:",id:"description",level:2},{value:"Attributes:",id:"attributes",level:3},{value:"Methods:",id:"methods",level:3},{value:"<code>__init__(self, beam=None, **kwargs)</code>",id:"__init__self-beamnone-kwargs",level:4},{value:"<code>multiply_with_tm(self, tm: &#39;TransferMap&#39;, length)</code>",id:"multiply_with_tmself-tm-transfermap-length",level:4},{value:"<code>track(R, tws0)</code>",id:"trackr-tws0",level:4},{value:"<code>map_x_twiss(self, tm)</code>",id:"map_x_twissself-tm",level:4},{value:"<code>__str__(self)</code>",id:"__str__self",level:4},{value:"<code>to_series(self) -&gt; pd.Series</code>",id:"to_seriesself---pdseries",level:4},{value:"<code>from_series(cls, series: pd.Series)</code>",id:"from_seriescls-series-pdseries",level:4},{value:"Description:",id:"description-1",level:2},{value:"Parameters:",id:"parameters",level:2},{value:"Returns:",id:"returns",level:2},{value:"Function Logic:",id:"function-logic",level:2},{value:"Example Usage:",id:"example-usage",level:2},{value:"Notes:",id:"notes",level:2}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsxs)(s.h1,{id:"twiss-class",children:[(0,n.jsx)(s.a,{href:"https://github.com/ocelot-collab/ocelot/blob/master/ocelot/cpbd/beam.py#L46",children:"Twiss"})," Class"]})}),"\n",(0,n.jsx)(s.h2,{id:"description",children:"Description:"}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.a,{href:"https://github.com/ocelot-collab/ocelot/blob/master/ocelot/cpbd/beam.py#L46",children:(0,n.jsx)(s.code,{children:"Twiss"})})," class serves as a container for Twiss parameters, which are used to describe the phase space properties of a beam in a storage ring or accelerator. The class supports the calculation of the Twiss parameters, tracking them through a lattice, and updating them as the beam passes through various optical elements."]}),"\n",(0,n.jsx)(s.h3,{id:"attributes",children:"Attributes:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"emit_x"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Horizontal beam emittance."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"emit_y"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Vertical beam emittance."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"emit_xn"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Normalized horizontal beam emittance."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"emit_yn"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Normalized vertical beam emittance."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"eigemit_1"})," (",(0,n.jsx)(s.code,{children:"float"}),"): First eigen-emittance value."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"eigemit_2"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Second eigen-emittance value."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"beta_x"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Horizontal beta function."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"beta_y"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Vertical beta function."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"alpha_x"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Horizontal alpha function."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"alpha_y"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Vertical alpha function."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"gamma_x"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Horizontal gamma function."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"gamma_y"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Vertical gamma function."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Dx"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Horizontal dispersion function."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Dy"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Vertical dispersion function."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Dxp"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Horizontal dispersion derivative."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Dyp"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Vertical dispersion derivative."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"mux"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Horizontal phase advance."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"muy"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Vertical phase advance."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"E"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Energy of the beam (in GeV)."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"s"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Longitudinal position along the reference trajectory."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"q"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Charge of the whole beam (in C)."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"x"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Mean horizontal position of the beam."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"y"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Mean vertical position of the beam."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"p"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Longitudinal momentum of the beam."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"tau"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Longitudinal position."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"xp"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Horizontal momentum."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"yp"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Vertical momentum."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"xx"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Moment of horizontal position squared."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"xpx"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Cross-term of horizontal position and momentum."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"pxpx"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Moment of horizontal momentum squared."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"yy"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Moment of vertical position squared."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"ypy"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Cross-term of vertical position and momentum."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"pypy"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Moment of vertical momentum squared."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"tautau"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Longitudinal position squared."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"xy"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Cross-term between horizontal and vertical positions."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"pxpy"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Cross-term between horizontal and vertical momenta."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"xpy"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Cross-term between horizontal position and vertical momentum."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"ypx"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Cross-term between vertical position and horizontal momentum."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"pp"})," (",(0,n.jsx)(s.code,{children:"float"}),"): Longitudinal momentum squared."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"id"})," (",(0,n.jsx)(s.code,{children:"str"}),"): Identifier for the Twiss instance."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"methods",children:"Methods:"}),"\n",(0,n.jsx)(s.h4,{id:"__init__self-beamnone-kwargs",children:(0,n.jsx)(s.code,{children:"__init__(self, beam=None, **kwargs)"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Initializes the Twiss parameters, either from a given ",(0,n.jsx)(s.code,{children:"beam"})," (either a ",(0,n.jsx)(s.code,{children:"Twiss"})," or ",(0,n.jsx)(s.code,{children:"Beam"})," object) or through the keyword arguments provided."]}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"multiply_with_tmself-tm-transfermap-length",children:(0,n.jsx)(s.code,{children:"multiply_with_tm(self, tm: 'TransferMap', length)"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Multiplies the current Twiss parameters with the transfer map (",(0,n.jsx)(s.code,{children:"tm"}),") and the length of the segment. Returns the updated Twiss parameters."]}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"trackr-tws0",children:(0,n.jsx)(s.code,{children:"track(R, tws0)"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Tracks the Twiss parameters through a transfer matrix ",(0,n.jsx)(s.code,{children:"R"})," using the initial Twiss parameters ",(0,n.jsx)(s.code,{children:"tws0"}),". Returns the updated Twiss parameters."]}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"map_x_twissself-tm",children:(0,n.jsx)(s.code,{children:"map_x_twiss(self, tm)"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Maps the Twiss parameters using the transfer map ",(0,n.jsx)(s.code,{children:"tm"})," and updates them based on the beam's energy."]}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"__str__self",children:(0,n.jsx)(s.code,{children:"__str__(self)"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Returns a string representation of the Twiss parameters."}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"to_seriesself---pdseries",children:(0,n.jsx)(s.code,{children:"to_series(self) -> pd.Series"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Converts the ",(0,n.jsx)(s.code,{children:"Twiss"})," instance into a ",(0,n.jsx)(s.code,{children:"pandas.Series"})," object for easy manipulation and analysis."]}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"from_seriescls-series-pdseries",children:(0,n.jsx)(s.code,{children:"from_series(cls, series: pd.Series)"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Class method to create a ",(0,n.jsx)(s.code,{children:"Twiss"})," instance from a ",(0,n.jsx)(s.code,{children:"pandas.Series"}),"."]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsxs)(s.h1,{id:"twiss-function",children:[(0,n.jsx)(s.a,{href:"https://github.com/ocelot-collab/ocelot/blob/master/ocelot/cpbd/optics.py#L195",children:(0,n.jsx)(s.code,{children:"twiss"})})," function"]}),"\n",(0,n.jsx)(s.h2,{id:"description-1",children:"Description:"}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.a,{href:"https://github.com/ocelot-collab/ocelot/blob/master/ocelot/cpbd/optics.py#L195",children:(0,n.jsx)(s.code,{children:"twiss"})})," function calculates the Twiss parameters for a particle beam as it propagates through a magnetic lattice. The function returns a list of Twiss parameter objects corresponding to various positions along the lattice. The initial Twiss parameters can be provided, or if not specified, the function will attempt to find a periodic solution."]}),"\n",(0,n.jsx)(s.h2,{id:"parameters",children:"Parameters:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"lattice"})," ",(0,n.jsxs)(s.a,{href:"/docs/docu/OCELOT%20fundamentals/magnet-lattice",children:["(",(0,n.jsx)(s.code,{children:"MagneticLattice"}),")"]}),": The magnetic lattice through which the particle beam is propagated."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"tws0"})," (",(0,n.jsx)(s.a,{href:"/docs/docu/OCELOT%20fundamentals/twiss",children:(0,n.jsx)(s.code,{children:"Twiss"})}),", optional): Initial Twiss parameters. If not provided, the function will attempt to find a periodic solution for the lattice."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"nPoints"})," (",(0,n.jsx)(s.code,{children:"int"}),", optional): Number of points per cell. If ",(0,n.jsx)(s.code,{children:"None"}),", the function will calculate the Twiss parameters at the end of each element."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"return_df"})," (",(0,n.jsx)(s.code,{children:"bool"}),", optional): If ",(0,n.jsx)(s.code,{children:"True"}),", the output will be returned as a pandas DataFrame instead of a list of ",(0,n.jsx)(s.code,{children:"Twiss"})," objects."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"attach2elem"})," (",(0,n.jsx)(s.code,{children:"bool"}),", optional): If ",(0,n.jsx)(s.code,{children:"True"})," and ",(0,n.jsx)(s.code,{children:"nPoints"})," is ",(0,n.jsx)(s.code,{children:"None"}),", the Twiss parameters will be attached to the ",(0,n.jsx)(s.code,{children:"elem.tws"})," attribute of the lattice elements, representing the end of the element. This is not recommended for general use but can be useful for smaller scripts."]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"returns",children:"Returns:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsxs)(s.strong,{children:["List of ",(0,n.jsx)(s.code,{children:"Twiss"})," objects"]}),": The function returns a list of Twiss parameters for each element or cell in the lattice. If ",(0,n.jsx)(s.code,{children:"return_df"})," is ",(0,n.jsx)(s.code,{children:"True"}),", the list will be converted to a pandas DataFrame."]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"function-logic",children:"Function Logic:"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Initial Twiss Parameters"}),": If ",(0,n.jsx)(s.code,{children:"tws0"})," is not provided, the function will attempt to find a periodic solution using the ",(0,n.jsx)(s.code,{children:"periodic_twiss"})," method of the ",(0,n.jsx)(s.code,{children:"lattice"})," object."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Periodic Solution Check"}),": If the ",(0,n.jsx)(s.code,{children:"beta_x"})," or ",(0,n.jsx)(s.code,{children:"beta_y"})," values are 0 in the initial Twiss parameters, the function will recalculate the periodic Twiss solution for the lattice."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Twiss Parameter Calculation"}),": The function uses the ",(0,n.jsx)(s.code,{children:"trace_obj"})," method to calculate the Twiss parameters at the desired positions in the lattice. The parameters can be attached to the elements of the lattice if ",(0,n.jsx)(s.code,{children:"attach2elem"})," is ",(0,n.jsx)(s.code,{children:"True"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Return"}),": The function returns the calculated Twiss parameters. If ",(0,n.jsx)(s.code,{children:"return_df"})," is ",(0,n.jsx)(s.code,{children:"True"}),", the results will be returned as a pandas DataFrame."]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"example-usage",children:"Example Usage:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:"# Create a MagneticLattice object\nlattice = MagneticLattice(sequence)\n\n# Calculate Twiss parameters with periodic solution\ntwiss_parameters = twiss(lattice)\n\n# Calculate Twiss parameters and return as a pandas DataFrame\ntwiss_df = twiss(lattice, return_df=True)\n\n# Calculate Twiss parameters with custom initial Twiss object\ntws0 = Twiss(beta_x=1.0, beta_y=1.0)\ntwiss_parameters_with_tws0 = twiss(lattice, tws0=tws0)\n\n# Calculate Twiss parameters with custom number of points per cell\ntwiss_parameters_custom_points = twiss(lattice, nPoints=5)\n"})}),"\n",(0,n.jsx)(s.h2,{id:"notes",children:"Notes:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"The function will automatically handle periodic solutions and can return the results in a pandas DataFrame format if needed."}),"\n",(0,n.jsx)(s.li,{children:"If the initial Twiss parameters are not provided or are incomplete, the function attempts to calculate them based on the lattice."}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>l,x:()=>o});var t=i(6540);const n={},r=t.createContext(n);function l(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);