"use strict";(self.webpackChunkocelot_website=self.webpackChunkocelot_website||[]).push([[6575],{3116:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"docu/how-to/pull_request","title":"Create Pull Request","description":"How to create pull request","source":"@site/docs/docu/how-to/pull_request.md","sourceDirName":"docu/how-to","slug":"/docu/how-to/pull_request","permalink":"/docs/docu/how-to/pull_request","draft":false,"unlisted":false,"editUrl":"https://github.com/ocelot-collab/ocelot-collab.github.io/tree/main/docs/docu/how-to/pull_request.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Create Pull Request","description":"How to create pull request"},"sidebar":"docsSidebar","previous":{"title":"How To","permalink":"/docs/category/how-to"},"next":{"title":"Add Unit Test","permalink":"/docs/docu/how-to/unit_test"}}');var s=n(4848),r=n(8453);const i={sidebar_position:1,title:"Create Pull Request",description:"How to create pull request"},l="How to Create a Pull Request",a={},c=[{value:"1. Fork and Clone the Repository",id:"1-fork-and-clone-the-repository",level:2},{value:"2. Create a New Branch",id:"2-create-a-new-branch",level:2},{value:"3. Make Your Changes",id:"3-make-your-changes",level:2},{value:"4. Run Unit Tests",id:"4-run-unit-tests",level:2},{value:"5. Add Documentation",id:"5-add-documentation",level:2},{value:"6. Commit and Push Your Changes",id:"6-commit-and-push-your-changes",level:2},{value:"7. Open a Pull Request",id:"7-open-a-pull-request",level:2},{value:"8. PR Review",id:"8-pr-review",level:2}];function d(e){const t={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"how-to-create-a-pull-request",children:"How to Create a Pull Request"})}),"\n",(0,s.jsx)(t.p,{children:"Thank you for your interest in contributing to the Ocelot project! Follow the steps below to ensure your pull request (PR) can be reviewed and merged smoothly."}),"\n",(0,s.jsx)(t.h2,{id:"1-fork-and-clone-the-repository",children:"1. Fork and Clone the Repository"}),"\n",(0,s.jsxs)(t.p,{children:["First, fork the ",(0,s.jsx)(t.a,{href:"https://github.com/ocelot-collab/ocelot",children:"Ocelot GitHub repository"})," and clone it to your local machine:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"git clone https://github.com/YOUR_USERNAME/ocelot.git\ncd ocelot\n"})}),"\n",(0,s.jsx)(t.h2,{id:"2-create-a-new-branch",children:"2. Create a New Branch"}),"\n",(0,s.jsxs)(t.p,{children:["Always base your changes on the ",(0,s.jsx)(t.code,{children:"dev"})," branch. Create a new branch for your changes:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"git checkout dev\ngit pull origin dev\ngit checkout -b my-feature-branch\n"})}),"\n",(0,s.jsx)(t.h2,{id:"3-make-your-changes",children:"3. Make Your Changes"}),"\n",(0,s.jsx)(t.p,{children:"Make the necessary changes in the code. Please follow the existing coding style and structure."}),"\n",(0,s.jsx)(t.h2,{id:"4-run-unit-tests",children:"4. Run Unit Tests"}),"\n",(0,s.jsx)(t.p,{children:"Before submitting your PR, make sure that all unit tests pass. You can run the tests using:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"python -m pytest unit_tests\n"})}),"\n",(0,s.jsx)(t.p,{children:"See successful example of unit test passage:"}),"\n",(0,s.jsx)("a",{href:"/img/how_to/unit_test.png",target:"_blank",children:(0,s.jsx)("img",{src:"/img/how_to/unit_test.png",alt:"Unit test success",style:{width:"200px"}})}),"\n",(0,s.jsx)(t.admonition,{type:"warning",children:(0,s.jsxs)(t.p,{children:["If you add new functionality, make sure to include unit tests for it. Check the next ",(0,s.jsx)(t.a,{href:"/docs/docu/how-to/unit_test",children:"chapter"})," to see how it's done."]})}),"\n",(0,s.jsx)(t.h2,{id:"5-add-documentation",children:"5. Add Documentation"}),"\n",(0,s.jsx)(t.p,{children:"Update or add docstrings for any new functions or changes. If you're adding a new feature, provide a clear usage example in the docstring."}),"\n",(0,s.jsx)(t.h2,{id:"6-commit-and-push-your-changes",children:"6. Commit and Push Your Changes"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'git add .\ngit commit -m "Add feature X to match function"\ngit push origin my-feature-branch\n'})}),"\n",(0,s.jsx)(t.h2,{id:"7-open-a-pull-request",children:"7. Open a Pull Request"}),"\n",(0,s.jsxs)(t.p,{children:["Go to the GitHub page of your fork and click the ",(0,s.jsx)(t.strong,{children:"Compare & pull request"})," button."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Important"}),": Set the base branch of the PR to ",(0,s.jsx)(t.code,{children:"dev"}),", ",(0,s.jsx)(t.strong,{children:"not"})," ",(0,s.jsx)(t.code,{children:"main"}),"."]}),"\n",(0,s.jsx)(t.li,{children:"Provide a clear description of the changes you made."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"8-pr-review",children:"8. PR Review"}),"\n",(0,s.jsx)(t.p,{children:"A maintainer will review your PR. Please be ready to:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Confirm that unit tests pass."}),"\n",(0,s.jsx)(t.li,{children:"Add or update documentation."}),"\n",(0,s.jsx)(t.li,{children:"Add unit tests for the specific case you implemented."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"If you have any questions or need help during the process, feel free to reach out!"}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:"Thanks for contributing to Ocelot!"}),"\n",(0,s.jsxs)(t.p,{children:["Cheers,",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"Sergey"})]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var o=n(6540);const s={},r=o.createContext(s);function i(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);