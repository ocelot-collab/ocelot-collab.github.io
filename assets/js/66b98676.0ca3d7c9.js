"use strict";(self.webpackChunkocelot_website=self.webpackChunkocelot_website||[]).push([[869],{7023:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"tutorial/tutorial-beam-dynamics/small_useful_features","title":"14. Useful OCELOT functions","description":"This notebook was created by Sergey Tomin (sergey.tomin@desy.de). May 2020.","source":"@site/docs/tutorial/tutorial-beam-dynamics/small_useful_features.md","sourceDirName":"tutorial/tutorial-beam-dynamics","slug":"/tutorial/tutorial-beam-dynamics/small_useful_features","permalink":"/docs/tutorial/tutorial-beam-dynamics/small_useful_features","draft":false,"unlisted":false,"editUrl":"https://github.com/ocelot-collab/ocelot/docs/tutorial/tutorial-beam-dynamics/small_useful_features.md","tags":[],"version":"current","sidebarPosition":14,"frontMatter":{"sidebar_position":14,"title":"14. Useful OCELOT functions"},"sidebar":"tutorialSidebar","previous":{"title":"13. Optimization Toy","permalink":"/docs/tutorial/tutorial-beam-dynamics/accelerator_optim"},"next":{"title":"Tutorial - Photons","permalink":"/docs/category/tutorial---photons"}}');var t=s(4848),r=s(8453);const i={sidebar_position:14,title:"14. Useful OCELOT functions"},l="14. Useful OCELOT functions",c={},o=[{value:"Contents",id:"contents",level:3},{value:"Aperture",id:"aperture",level:2},{value:"Lattice",id:"lattice",level:4},{value:"function to calculate transmission through the lattice",id:"function-to-calculate-transmission-through-the-lattice",level:4},{value:"Scan with two correctors. Apertures are NOT activated.",id:"scan-with-two-correctors-apertures-are-not-activated",level:3},{value:"Scan with two correctors. Apertures are activated.",id:"scan-with-two-correctors-apertures-are-activated",level:3},{value:"Losses along accelerator lattice",id:"losses-along-accelerator-lattice",level:2},{value:"Tracking the electron beam with Runge-Kutta integrator in magnetic fields",id:"tracking-the-electron-beam-with-runge-kutta-integrator-in-magnetic-fields",level:2},{value:"define 3D Magnetic fields.",id:"define-3d-magnetic-fields",level:3},{value:"Create MagneticLattice and MethodTM",id:"create-magneticlattice-and-methodtm",level:3},{value:"Tracking through the lattice WITH RK integrator",id:"tracking-through-the-lattice-with-rk-integrator",level:3},{value:"Tracking through the lattice WITHOUT RK integrator",id:"tracking-through-the-lattice-without-rk-integrator",level:3},{value:"Dump the beam distribution at a specific location of the lattice",id:"dump-the-beam-distribution-at-a-specific-location-of-the-lattice",level:2},{value:"Tracking",id:"tracking",level:3},{value:"CopyBeam",id:"copybeam",level:3},{value:"Energy jitter. Or simulation of the jitter in the RF parameters",id:"energy-jitter-or-simulation-of-the-jitter-in-the-rf-parameters",level:2},{value:"Lattice",id:"lattice-1",level:3},{value:"Track beam without any errors in the RF system",id:"track-beam-without-any-errors-in-the-rf-system",level:3},{value:"Introduce errors in the RF system",id:"introduce-errors-in-the-rf-system",level:3},{value:"Define energy profile",id:"define-energy-profile",level:3},{value:"Simple test",id:"simple-test",level:3},{value:"Get Twiss parameters from the beam slice",id:"get-twiss-parameters-from-the-beam-slice",level:2},{value:"Transfer Maps in Ocelot. Global assignment and for specific elements",id:"transfer-maps-in-ocelot-global-assignment-and-for-specific-elements",level:2},{value:"First order",id:"first-order",level:3},{value:"Second order",id:"second-order",level:3},{value:"Mixed transfer maps",id:"mixed-transfer-maps",level:3},{value:"NOTE",id:"note",level:3},{value:"To be continued ...",id:"to-be-continued-",level:2}];function d(e){const n={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",math:"math",mfrac:"mfrac",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msqrt:"msqrt",msub:"msub",msubsup:"msubsup",msup:"msup",ol:"ol",p:"p",path:"path",pre:"pre",semantics:"semantics",span:"span",svg:"svg",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("small",{children:(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.em,{children:["This notebook was created by Sergey Tomin (",(0,t.jsx)(n.a,{href:"mailto:sergey.tomin@desy.de",children:"sergey.tomin@desy.de"}),"). May 2020."]})})}),"\n",(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"14-useful-ocelot-functions",children:"14. Useful OCELOT functions"})}),"\n",(0,t.jsx)(n.p,{children:"This notebook was created to show some small functions that may be useful for accelerator physicists."}),"\n",(0,t.jsx)(n.h3,{id:"contents",children:"Contents"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#aperture",children:"Aperture"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#losses",children:"Losses along accelerator lattice"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#rk",children:"RK tracking"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#savebeam",children:"How to save/dump the beam distribution at a specific location of the lattice"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#jitter",children:"Energy jitter. Or simulation of the jitter in the RF parameters."})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#twiss",children:"Get Twiss parameters from the beam slice"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#TM",children:"Transfer Maps in Ocelot. Global assignment and for specific elements"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# import modules\nfrom ocelot import *\nfrom ocelot.gui.accelerator import *\nimport copy\nimport pandas as pd\nimport seaborn as sbn\nimport time\nimport matplotlib.pyplot as plt\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    initializing ocelot...\n"})}),"\n",(0,t.jsx)(n.h2,{id:"aperture",children:"Aperture"}),"\n",(0,t.jsx)("a",{id:"aperture"}),"\n",(0,t.jsx)(n.p,{children:"Suppose you have a simple (and imposible) missaligned dump beam line.\nAnd you want to know the best corrector setting to get 100% transmission."}),"\n",(0,t.jsx)(n.p,{children:"We are goring to explor the transmission in horizontal only."}),"\n",(0,t.jsx)(n.h4,{id:"lattice",children:"Lattice"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"d = Drift(l=1)\n\n# horizontal correctors\nc1 = Hcor()\nc2 = Hcor()\n\n# Sextupoles\nsf = Sextupole(l=0.2, k2=3000)\nsf.dx, sf.dy = 1e-3, -1e-3\n\nsd = Sextupole(l=0.2, k2=-3000)\nsd.dx, sd.dy = 1e-3, -1e-3\n\n\n# Quadrupoles with transversal offsets\nqf = Quadrupole(l=0.2, k1=1, k2=20)\nqf.dx, qf.dy = 1e-3, -1e-3\n\nqd = Quadrupole(l=0.2, k1=-1, k2=-20, tm=SecondTM)\nqd.dx, qd.dy = -1e-3, 1e-3\n\n# Collimators\nap1 = Aperture(xmax=5e-3, dx=-1e-3)\nap2 = Aperture(xmax=5e-3, dx=1e-3)\n# BPMs\nm1 = Monitor()\nm2 = Monitor()\n\n# Solenoids\nsolb_23_i1 = Solenoid(eid='SOLB.23.I1')\ncell = (d, c1, d, sf, d, qf, d, ap1, d, m1, d, c2, d, sd, d, qd, d, ap2, d, m2, d,)\n\nlat = MagneticLattice(cell, method={\"global\": SecondTM})\n"})}),"\n",(0,t.jsx)(n.p,{children:"Create ParticleArray and Navigator objects"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"p_array_init = generate_parray(sigma_x=1e-3, sigma_px=5e-5, sigma_y=1e-3, sigma_py=5e-5, \n                               nparticles=20000, charge=1e-09, energy=1.)\n\ncorrectors = [c1, c2]\n\n\n"})}),"\n",(0,t.jsx)(n.h4,{id:"function-to-calculate-transmission-through-the-lattice",children:"function to calculate transmission through the lattice"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def transmission(lat, navi, correctors, kicks):\n    for i, kick in enumerate(kicks):\n        correctors[i].angle = kick\n    \n    lat.update_transfer_maps()\n    \n    # reset position of the Navigator \n    navi.reset_position()\n    \n    p_array = copy.deepcopy(p_array_init)\n    tws_tack, p_array = track(lat, p_array, navi, calc_tws=False, print_progress=False)\n    trans = p_array.n / p_array_init.n\n    return trans\n\n\ndef scan(cor1_range, cor2_range):\n    trans_response = np.zeros((len(cor2_range), len(cor1_range)))\n\n    for i, a2 in enumerate(A2):\n        print(f"{i} of {len(A2)}", end="\\r")\n        for j, a1 in enumerate(A1):\n            kicks = [a1, a2]\n            trans_response[i, j] = transmission(lat, navi, correctors, kicks)\n    \n    return trans_response\n'})}),"\n",(0,t.jsx)(n.h3,{id:"scan-with-two-correctors-apertures-are-not-activated",children:"Scan with two correctors. Apertures are NOT activated."}),"\n",(0,t.jsx)(n.p,{children:"Here we expect 100% transmission for any corrector settings."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'navi = Navigator(lat)\n\nA1 = np.arange(-2, 2.5, 0.25)*1e-3\nA2 = np.arange(-8, 9., 0.5)*1e-3\n\nstart = time.time()\n\ntrans_response = scan(A1, A2)\n\nprint(f" exec n_tracks={len(A2) * len(A1)}:  {time.time() - start} s")\ndf = pd.DataFrame(trans_response, index=A2, columns=A1)\nsbn.heatmap(df)\nplt.show()\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"     exec n_tracks=612:  32.27504515647888 s\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"png",src:s(2611).A+"",width:"564",height:"586"})}),"\n",(0,t.jsx)(n.h3,{id:"scan-with-two-correctors-apertures-are-activated",children:"Scan with two correctors. Apertures are activated."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'navi = Navigator(lat)\n\n# activate apertures\nnavi.activate_apertures()\n\n# activate apertures starting from element "start" up to element "stop"\n# navi.activate_apertures(start=None, stop=m1)\n\nstart = time.time()\n\ntrans_response = scan(A1, A2)\n\nprint(f" exec n_tracks={len(A2) * len(A1)}:  {time.time() - start} s")\ndf = pd.DataFrame(trans_response, index=A2, columns=A1)\nsbn.heatmap(df)\nplt.show()\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"     exec n_tracks=612:  39.902544260025024 s\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"png",src:s(2389).A+"",width:"555",height:"582"})}),"\n",(0,t.jsx)(n.h2,{id:"losses-along-accelerator-lattice",children:"Losses along accelerator lattice"}),"\n",(0,t.jsx)("a",{id:"losses"}),"\n",(0,t.jsx)(n.p,{children:"New feature which is available currently in dev branch."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ParticleArray"})," has ",(0,t.jsx)(n.code,{children:"lost_particle_recorder atribute"})," (",(0,t.jsx)(n.code,{children:"LostParticleRecorder"}),") has list of  s_positions along accelerator and number of particles which were lost at that point"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"p_array.lost_particle_recorder.lp_to_pos_hist = [(s1, n_lost_particles), (s2, n_lost_particlse), ..., (sn, n_lost_particlse)]"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'navi = Navigator(lat)\n\n# activate apertures\nnavi.activate_apertures()\n\nc1.angle = 0\nc2.angle = 0\n\nlat.update_transfer_maps()\n    \n# reset position of the Navigator \nnavi.reset_position()\n    \np_array = copy.deepcopy(p_array_init)\ntws_tack, p_array = track(lat, p_array, navi, calc_tws=False, print_progress=False)\ntrans = p_array.n / p_array_init.n\nprint("transmission: ", trans)\n\ns = [p[0] for p in p_array.lost_particle_recorder.lp_to_pos_hist]\nnlost = [p[1] for p in p_array.lost_particle_recorder.lp_to_pos_hist]\n\nfig, ax_xy = plot_API(lat, legend=True, fig_name=10)\nax_xy.bar(s, nlost)\nplt.show()\n\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    transmission:  0.4235\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"png",src:s(6744).A+"",width:"626",height:"454"})}),"\n",(0,t.jsx)(n.h2,{id:"tracking-the-electron-beam-with-runge-kutta-integrator-in-magnetic-fields",children:"Tracking the electron beam with Runge-Kutta integrator in magnetic fields"}),"\n",(0,t.jsx)("a",{id:"rk"}),"\n",(0,t.jsx)(n.p,{children:"In OCELOT, there is a possibility to track the beam in the arbitrary defined 3D magnetic fields."}),"\n",(0,t.jsx)(n.p,{children:"You need two components to do this:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"define the 3D magnetic fields"}),"\n",(0,t.jsx)(n.li,{children:"MethodTM, the class which creates Transfer Maps, should know that you want to apply RK integrator to an element"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"define-3d-magnetic-fields",children:"define 3D Magnetic fields."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'lperiod = 0.01 # [m] undulator period \nnperiods = 50  # number of periods\nKx = 2         # undulator deflection parameter\n\n\ndef und_field_3D(x, y, z, lperiod, Kx):\n    kx = 0.\n    kz = 2 * pi / lperiod\n    ky = np.sqrt(kz * kz + kx * kx)\n    c = speed_of_light\n    m0 = m_e_eV\n    B0 = Kx * m0 * kz / c\n    k1 = -B0 * kx / ky\n    k2 = -B0 * kz / ky\n\n    kx_x = kx * x\n    ky_y = ky * y\n    kz_z = kz * z\n\n    cosz = np.cos(kz_z)\n\n    cosx = np.cos(kx_x)\n    sinhy = np.sinh(ky_y)\n    Bx = k1 * np.sin(kx_x) * sinhy * cosz \n    By = B0 * cosx * np.cosh(ky_y) * cosz\n    Bz = k2 * cosx * sinhy * np.sin(kz_z)\n    return (Bx, By, Bz)\n\n\n# define number of points along z-axis, by default npoints = 200\nund = Undulator(lperiod=lperiod, nperiods=nperiods, Kx=Kx, eid="und", npoints = 500)\nund.mag_field = lambda x, y, z: und_field_3D(x, y, z, lperiod=lperiod, Kx=Kx)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"create-magneticlattice-and-methodtm",children:"Create MagneticLattice and MethodTM"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from ocelot.cpbd.transformations import RungeKuttaTM\nd = Drift(l=0.5)\nqf = Quadrupole(l=0.2, k1=1.2)\nqd = Quadrupole(l=0.2, k1=-1.2)\n\n#method = MethodTM()\n# let the MethodTM to know\n#method.params[Undulator] = RungeKuttaTM\n\n\nlat = MagneticLattice((d, qf, d, qd, d, und, d, qf, d, qd, d), \n                      method={"global": SecondTM, Undulator: RungeKuttaTM})\n'})}),"\n",(0,t.jsx)(n.h3,{id:"tracking-through-the-lattice-with-rk-integrator",children:"Tracking through the lattice WITH RK integrator"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"p_array = copy.deepcopy(p_array_init)\n\nnavi = Navigator(lat)\n\ntws_track, _ = track(lat, p_array, navi)\n\n\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    z = 4.3 / 4.300000000000001. Applied: 0001. Applied: \n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"plot_opt_func(lat, tws_track)\nplt.show()\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"png",src:s(6487).A+"",width:"647",height:"487"})}),"\n",(0,t.jsx)(n.h3,{id:"tracking-through-the-lattice-without-rk-integrator",children:"Tracking through the lattice WITHOUT RK integrator"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'d = Drift(l=0.5)\nqf = Quadrupole(l=0.2, k1=1.2)\nqd = Quadrupole(l=0.2, k1=-1.2)\n\n\nlat = MagneticLattice((d, qf, d, qd, d, und, d, qf, d, qd, d), method={"global":SecondTM})\np_array = copy.deepcopy(p_array_init)\n\nnavi = Navigator(lat)\n\ntws_track, _ = track(lat, p_array, navi)\n\nplot_opt_func(lat, tws_track)\nplt.show()\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    z = 4.3 / 4.300000000000001. Applied: 0001. Applied: \n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"png",src:s(5728).A+"",width:"647",height:"487"})}),"\n",(0,t.jsx)(n.h2,{id:"dump-the-beam-distribution-at-a-specific-location-of-the-lattice",children:"Dump the beam distribution at a specific location of the lattice"}),"\n",(0,t.jsx)("a",{id:"savebeam"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"\nfrom ocelot import *\nfrom ocelot.gui import *\n\n# define elements of the lattice\nd = Drift(1.)\nqf = Quadrupole(l=0.3, k1=1)\nqd = Quadrupole(l=0.3, k1=-1)\nm = Marker()\nfodo = (qf, d, qd, d)\ncell = (fodo*3, m, qd, fodo*3)\n\n# init MagneticLattice\nlat = MagneticLattice(cell)\n\n# calc twiss\ntws0 = Twiss()\ntws0.beta_x = 10\ntws0.beta_y = 10\ntws = twiss(lat, tws0)\nplot_opt_func(lat, tws)\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"png",src:s(5371).A+"",width:"647",height:"487"})}),"\n",(0,t.jsx)(n.h3,{id:"tracking",children:"Tracking"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# generate ParticleArray\nparray = generate_parray(tws=tws[0])\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"show_e_beam(parray)\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"png",src:s(9011).A+"",width:"581",height:"455"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from ocelot.cpbd.physics_proc import SaveBeam\nnavi = Navigator(lat)\n\n# define SaveBeam \nsv = SaveBeam(filename="test.npz")\nnavi.add_physics_proc(sv, m, m)\n\ntws_track, _ = track(lat, parray, navi)\n\nplot_opt_func(lat, tws_track)\n\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    z = 15.9 / 15.900000000000004. Applied: 004. Applied: \n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"png",src:s(1227).A+"",width:"647",height:"487"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'parray_dump = load_particle_array("test.npz")\nshow_e_beam(parray_dump)\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"png",src:s(2793).A+"",width:"581",height:"455"})}),"\n",(0,t.jsx)(n.h3,{id:"copybeam",children:"CopyBeam"}),"\n",(0,t.jsx)(n.p,{children:"The same idea to dump the particle array but not on a hard disc but rather to the memory.\nThe usage is similar:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"cb = CopyBeam()\nnavi.add_physics_proc(cb, m, m)\n\nparray_copied = cb.parray\n"})}),"\n",(0,t.jsx)(n.h2,{id:"energy-jitter-or-simulation-of-the-jitter-in-the-rf-parameters",children:"Energy jitter. Or simulation of the jitter in the RF parameters"}),"\n",(0,t.jsx)("a",{id:"jitter"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.em,{children:["This notebook was created as a response to an open ",(0,t.jsx)(n.a,{href:"https://github.com/ocelot-collab/ocelot/issues/142",children:"issue"})," on GitHub, October 2022"]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# import modules\nfrom ocelot import *\nfrom ocelot.gui.accelerator import *\nfrom ocelot.utils import *\nimport copy\n"})}),"\n",(0,t.jsxs)(n.p,{children:["I reuse some part of the ",(0,t.jsx)(n.a,{href:"https://nbviewer.org/github/ocelot-collab/ocelot/blob/master/demos/ipython_tutorials/9_thz_source.ipynb",children:'"Tutorial N9. Simple accelerator based THz source"'})," but remove undulator, simplified cavities and added additional cavity and new bunch compressor."]}),"\n",(0,t.jsx)(n.p,{children:"Note the Twiss parameters are not optimize and we are not interested in transverse dynamics."}),"\n",(0,t.jsx)(n.h3,{id:"lattice-1",children:"Lattice"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'Egun = 0.005\ngamma = Egun/m_e_GeV\nbeta = np.sqrt(1 - gamma**-2)\n#Initial Twiss parameters\ntws0 = Twiss()\ntws0.emit_x = 0.5e-6/gamma/beta\ntws0.emit_y = 0.5e-6/gamma/beta\ntws0.beta_x = 29.171\ntws0.beta_y = 29.171\ntws0.alpha_x = 10.955\ntws0.alpha_y = 10.955\ntws0.gamma_x = 4.148367385417024\ntws0.gamma_y = 4.148367385417024\ntws0.E = Egun\n\nparray_init = generate_parray(sigma_tau=0.001, sigma_p=1e-3, charge=250e-12,\n                              chirp=0, tws=tws0)\nshow_e_beam(parray_init)\nprint("beam energy after the gun: ", parray_init.E)\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    [INFO    ] \x1b[0mTwiss parameters have priority. sigma_{x, px, y, py} will be redefined\x1b[0m\n\n\n    beam energy after the gun:  0.005\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"png",src:s(8046).A+"",width:"581",height:"455"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"Egun = 0.005\ngamma = Egun/m_e_GeV\nbeta = np.sqrt(1 - gamma**-2)\n#Initial Twiss parameters\ntws0 = Twiss()\ntws0.emit_x = 0.5e-6/gamma/beta\ntws0.emit_y = 0.5e-6/gamma/beta\ntws0.beta_x = 29.171\ntws0.beta_y = 29.171\ntws0.alpha_x = 10.955\ntws0.alpha_y = 10.955\ntws0.gamma_x = 4.148367385417024\ntws0.gamma_y = 4.148367385417024\ntws0.E = Egun\n\n# Drifts\nD0 = Drift(l=3.52)\nD1 = Drift(l=0.3459)\nD2 = Drift(l=0.2043)\nD3 = Drift(l=0.85)\nD4 = Drift(l=0.202)\nD5 = Drift(l=0.262)\nD6 = Drift(l=2.9)\nD8 = Drift(l=1.8)\nD9 = Drift(l=0.9)\nD11 = Drift(l=1.31)\nD12 = Drift(l=0.81)\nD13 = Drift(l=0.50)\nD14 = Drift(l=1.0)\nD15 = Drift(l=1.5)\nD18 = Drift(l=0.97)\nD19 = Drift(l=2.3)\nD20 = Drift(l=2.45)\n\n\n# Quadrupoles\nq1 = Quadrupole(l=0.3, k1=-1.537886, eid='Q1')\nq2 = Quadrupole(l=0.3, k1=1.435078, eid='Q2')\nq3 = Quadrupole(l=0.2, k1=1.637, eid='Q3')\nq4 = Quadrupole(l=0.2, k1=-2.60970, eid='Q4')\nq5 = Quadrupole(l=0.2, k1=3.4320, eid='Q5')\nq6 = Quadrupole(l=0.2, k1=-1.9635, eid='Q6')\nq7 = Quadrupole(l=0.2, k1=-0.7968, eid='Q7')\nq8 = Quadrupole(l=0.2, k1=2.7285, eid='Q8')\nq9 = Quadrupole(l=0.2, k1=-3.4773, eid='Q9')\nq10 = Quadrupole(l=0.2, k1=0.780, eid='Q10')\nq11 = Quadrupole(l=0.2, k1=-1.631, eid='Q11')\nq12 = Quadrupole(l=0.2, k1=1.762, eid='Q12')\nq13 = Quadrupole(l=0.2, k1=-1.8, eid='Q13')\nq14 = Quadrupole(l=0.2, k1=1.8, eid='Q14')\nq15 = Quadrupole(l=0.2, k1=-1.8, eid='Q15')\n\n\n# SBends\nb1 = SBend(l=0.501471120927, angle=0.1327297047, e2=0.132729705, tilt=1.570796327, eid='B1')\nb2 = SBend(l=0.501471120927, angle=-0.1327297047, e1=-0.132729705, tilt=1.570796327, eid='B2')\nb3 = SBend(l=0.501471120927, angle=-0.1327297047, e2=-0.132729705, tilt=1.570796327, eid='B3')\nb4 = SBend(l=0.501471120927, angle=0.1327297047, e1=0.132729705, tilt=1.570796327, eid='B4')\n\n# Cavitys\nc1 = Cavity(l=1.0377*8, v=0.1547, phi=24.625, freq=1300000000.0, eid='C1')\nc13 = Cavity(l=0.346*8, v=0.0158, phi=188.68, freq=3900000000.0, eid='C3')\nc2 = Cavity(l=1.0377*8, v=0.57/np.cos(30*np.pi/180), phi=30, freq=1300000000.0, eid='C1')\n\nm_i1_end = Marker(\"I1End\")\nm_l1_end = Marker(\"L1End\")\n# Lattice \ncell = (D0, c1, D2, q1, D3, q2, D4, c13, D6, q3, \n        m_i1_end,\n        D6, q4, D8, q5, D9, q6, D9, q7, D11, q8, D12, q9, D13, b1, D14, b2, D15, b3, \n        D14, b4, D11, q12, D3, q11,D13, c2, m_l1_end, D11, q14, D3, q13,\n        D13, b1, D14, b2, D15, b3,D14, b4, )\n\nlat = MagneticLattice(cell)\n\ntws = twiss(lat, tws0)\nplot_opt_func(lat, tws, top_plot=[\"Dy\"], legend=False, fig_name=100)\nplt.show()\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"png",src:s(7620).A+"",width:"635",height:"487"})}),"\n",(0,t.jsx)(n.h3,{id:"track-beam-without-any-errors-in-the-rf-system",children:"Track beam without any errors in the RF system"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"parray = copy.deepcopy(parray_init)\n#cb = CopyBeam()\n\nnavi = Navigator(lat)\n#navi.add_physics_proc(cb, m_i1_end,m_i1_end)\ntws_track, parray = track(lat, parray, navi)\nshow_e_beam(parray, nfig=201)\nplt.show()\nprint(parray)\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    z = 55.299268967416005 / 55.29926896741601. Applied: \n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"png",src:s(5851).A+"",width:"583",height:"455"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    ParticleArray: \n    Ref. energy : 0.7 GeV \n    Ave. energy : 0.7 GeV \n    std(x)      : 0.076 mm\n    std(px)     : 0.008 mrad\n    std(y)      : 0.084 mm\n    std(py)     : 0.006 mrad\n    std(p)      : 0.0075\n    std(tau)    : 0.056 mm\n    Charge      : 0.25 nC \n    s pos       : 55.29926896741601 m \n    n particles : 200000\n"})}),"\n",(0,t.jsx)(n.h3,{id:"introduce-errors-in-the-rf-system",children:"Introduce errors in the RF system"}),"\n",(0,t.jsx)(n.p,{children:"let's suppose we have errors in phase 0.1 deg in all cavities.\nAnd we track the beam without any modifications in the lattice. However we will have a look on the beam energy after injector and last accelerator. In ideal machine the energies should be 130 MeV and 700 MeV."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'c1.phi = 24.625 + 0.1\nc13.phi = 188.68 - 0.1\nc2.phi = 30 + 0.1\n\nparray = copy.deepcopy(parray_init)\n\nnavi = Navigator(lat)\n\ncb1 = CopyBeam()\ncb2 = CopyBeam()\n\nnavi.add_physics_proc(cb1, m_i1_end, m_i1_end)\nnavi.add_physics_proc(cb2, m_l1_end, m_l1_end)\n\ntws_track, parray = track(lat, parray, navi)\nshow_e_beam(parray, nfig=201)\nplt.show()\nprint(f"beam energy after third harmonic: {cb1.parray.E}")\nprint(f"beam energy after the last cavity: {cb2.parray.E}")\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    z = 55.299268967416005 / 55.29926896741601. Applied: opyBeam\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"png",src:s(2337).A+"",width:"583",height:"455"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    beam energy after third harmonic: 0.12989482081125267\n    beam energy after the last cavity: 0.6993195831447575\n"})}),"\n",(0,t.jsxs)(n.p,{children:["First, we can clearly see that the amplitude of the beam current has changed, which is not surprising.\nAnd secondly, that the beam gains slightly different energy in the two accelerator stages.\nThe property ",(0,t.jsx)(n.code,{children:"E"})," in object ",(0,t.jsx)(n.code,{children:"ParticleArray"})," is resposible for the calculation of the beam reference energy."]}),"\n",(0,t.jsx)(n.p,{children:'In OCELOT there is no reference energy for the magnets. This means that the magnets will now "act" as if they were instantly tuned to the new reference energy. And this is not how it happens in real accelerator.'}),"\n",(0,t.jsxs)(n.p,{children:["To overcome this a new Physics Process ",(0,t.jsx)(n.code,{children:"LatticeEnergyProfile"})," was introduced."]}),"\n",(0,t.jsx)(n.h3,{id:"define-energy-profile",children:"Define energy profile"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"LatticeEnergyProfile"})," class has an attribute which is a reference energy ",(0,t.jsx)(n.code,{children:"Eref"}),". The object just shift 6th coordinate in a ParticleArray according to a new reference energy."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from ocelot.cpbd.physics_proc import LatticeEnergyProfile\n\nnavi = Navigator(lat)\ne_prof1 = LatticeEnergyProfile(Eref=0.13)\ne_prof2 = LatticeEnergyProfile(Eref=0.7)\nnavi.add_physics_proc(e_prof1, m_i1_end, m_i1_end)\nnavi.add_physics_proc(e_prof2, m_l1_end, m_l1_end)\ncb1 = CopyBeam()\ncb2 = CopyBeam()\n\nnavi.add_physics_proc(cb1, m_i1_end, m_i1_end)\nnavi.add_physics_proc(cb2, m_l1_end, m_l1_end)\n\n\nparray = copy.deepcopy(parray_init)\ntws_track, parray = track(lat, parray, navi)\nshow_e_beam(parray, nfig=201)\nplt.show()\nprint(f"beam energy after third harmonic: {cb1.parray.E}")\nprint(f"beam energy after the last cavity: {cb2.parray.E}")\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    z = 55.299268967416005 / 55.29926896741601. Applied: atticeEnergyProfile, CopyBeam\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"png",src:s(7646).A+"",width:"583",height:"455"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    beam energy after third harmonic: 0.13\n    beam energy after the last cavity: 0.7\n"})}),"\n",(0,t.jsx)(n.p,{children:"As a result we see that the beam energy after accelerations are again 130 MeV and 700 MeV. And amplitude of the beam current is again different."}),"\n",(0,t.jsx)(n.h3,{id:"simple-test",children:"Simple test"}),"\n",(0,t.jsx)(n.p,{children:"This procedure should not change the mean energy of the beam. Let's check."}),"\n",(0,t.jsx)(n.p,{children:"The 6th coordinate is"}),"\n",(0,t.jsx)(n.span,{className:"katex-display",children:(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mi,{children:"p"}),(0,t.jsx)(n.mo,{children:"="}),(0,t.jsxs)(n.mfrac,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mi,{children:"E"}),(0,t.jsx)(n.mo,{children:"\u2212"}),(0,t.jsxs)(n.msub,{children:[(0,t.jsx)(n.mi,{children:"E"}),(0,t.jsx)(n.mn,{children:"0"})]})]}),(0,t.jsxs)(n.mrow,{children:[(0,t.jsxs)(n.msub,{children:[(0,t.jsx)(n.mi,{children:"p"}),(0,t.jsx)(n.mn,{children:"0"})]}),(0,t.jsx)(n.mi,{children:"c"})]})]})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"p = \\frac{E - E_0}{p_0 c}"})]})})}),(0,t.jsxs)(n.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.625em",verticalAlign:"-0.1944em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"p"}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(n.span,{className:"mrel",children:"="}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"2.2408em",verticalAlign:"-0.8804em"}}),(0,t.jsxs)(n.span,{className:"mord",children:[(0,t.jsx)(n.span,{className:"mopen nulldelimiter"}),(0,t.jsx)(n.span,{className:"mfrac",children:(0,t.jsxs)(n.span,{className:"vlist-t vlist-t2",children:[(0,t.jsxs)(n.span,{className:"vlist-r",children:[(0,t.jsxs)(n.span,{className:"vlist",style:{height:"1.3603em"},children:[(0,t.jsxs)(n.span,{style:{top:"-2.314em"},children:[(0,t.jsx)(n.span,{className:"pstrut",style:{height:"3em"}}),(0,t.jsxs)(n.span,{className:"mord",children:[(0,t.jsxs)(n.span,{className:"mord",children:[(0,t.jsx)(n.span,{className:"mord mathnormal",children:"p"}),(0,t.jsx)(n.span,{className:"msupsub",children:(0,t.jsxs)(n.span,{className:"vlist-t vlist-t2",children:[(0,t.jsxs)(n.span,{className:"vlist-r",children:[(0,t.jsx)(n.span,{className:"vlist",style:{height:"0.3011em"},children:(0,t.jsxs)(n.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,t.jsx)(n.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(n.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(n.span,{className:"mord mtight",children:"0"})})]})}),(0,t.jsx)(n.span,{className:"vlist-s",children:"\u200b"})]}),(0,t.jsx)(n.span,{className:"vlist-r",children:(0,t.jsx)(n.span,{className:"vlist",style:{height:"0.15em"},children:(0,t.jsx)(n.span,{})})})]})})]}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"c"})]})]}),(0,t.jsxs)(n.span,{style:{top:"-3.23em"},children:[(0,t.jsx)(n.span,{className:"pstrut",style:{height:"3em"}}),(0,t.jsx)(n.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})]}),(0,t.jsxs)(n.span,{style:{top:"-3.677em"},children:[(0,t.jsx)(n.span,{className:"pstrut",style:{height:"3em"}}),(0,t.jsxs)(n.span,{className:"mord",children:[(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.05764em"},children:"E"}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(n.span,{className:"mbin",children:"\u2212"}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsxs)(n.span,{className:"mord",children:[(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.05764em"},children:"E"}),(0,t.jsx)(n.span,{className:"msupsub",children:(0,t.jsxs)(n.span,{className:"vlist-t vlist-t2",children:[(0,t.jsxs)(n.span,{className:"vlist-r",children:[(0,t.jsx)(n.span,{className:"vlist",style:{height:"0.3011em"},children:(0,t.jsxs)(n.span,{style:{top:"-2.55em",marginLeft:"-0.0576em",marginRight:"0.05em"},children:[(0,t.jsx)(n.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(n.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(n.span,{className:"mord mtight",children:"0"})})]})}),(0,t.jsx)(n.span,{className:"vlist-s",children:"\u200b"})]}),(0,t.jsx)(n.span,{className:"vlist-r",children:(0,t.jsx)(n.span,{className:"vlist",style:{height:"0.15em"},children:(0,t.jsx)(n.span,{})})})]})})]})]})]})]}),(0,t.jsx)(n.span,{className:"vlist-s",children:"\u200b"})]}),(0,t.jsx)(n.span,{className:"vlist-r",children:(0,t.jsx)(n.span,{className:"vlist",style:{height:"0.8804em"},children:(0,t.jsx)(n.span,{})})})]})}),(0,t.jsx)(n.span,{className:"mclose nulldelimiter"})]})]})]})]})}),"\n",(0,t.jsx)(n.p,{children:"where"}),"\n",(0,t.jsx)(n.span,{className:"katex-display",children:(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsxs)(n.msub,{children:[(0,t.jsx)(n.mi,{children:"p"}),(0,t.jsx)(n.mn,{children:"0"})]}),(0,t.jsx)(n.mi,{children:"c"}),(0,t.jsx)(n.mo,{children:"="}),(0,t.jsx)(n.msqrt,{children:(0,t.jsxs)(n.mrow,{children:[(0,t.jsxs)(n.msubsup,{children:[(0,t.jsx)(n.mi,{children:"E"}),(0,t.jsx)(n.mn,{children:"0"}),(0,t.jsx)(n.mn,{children:"2"})]}),(0,t.jsx)(n.mo,{children:"\u2212"}),(0,t.jsxs)(n.msubsup,{children:[(0,t.jsx)(n.mi,{children:"m"}),(0,t.jsx)(n.mn,{children:"0"}),(0,t.jsx)(n.mn,{children:"2"})]}),(0,t.jsxs)(n.msup,{children:[(0,t.jsx)(n.mi,{children:"c"}),(0,t.jsx)(n.mn,{children:"4"})]})]})})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"p_0 c = \\sqrt{E_0^2 - m_0^2 c^4}"})]})})}),(0,t.jsxs)(n.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.625em",verticalAlign:"-0.1944em"}}),(0,t.jsxs)(n.span,{className:"mord",children:[(0,t.jsx)(n.span,{className:"mord mathnormal",children:"p"}),(0,t.jsx)(n.span,{className:"msupsub",children:(0,t.jsxs)(n.span,{className:"vlist-t vlist-t2",children:[(0,t.jsxs)(n.span,{className:"vlist-r",children:[(0,t.jsx)(n.span,{className:"vlist",style:{height:"0.3011em"},children:(0,t.jsxs)(n.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,t.jsx)(n.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(n.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(n.span,{className:"mord mtight",children:"0"})})]})}),(0,t.jsx)(n.span,{className:"vlist-s",children:"\u200b"})]}),(0,t.jsx)(n.span,{className:"vlist-r",children:(0,t.jsx)(n.span,{className:"vlist",style:{height:"0.15em"},children:(0,t.jsx)(n.span,{})})})]})})]}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"c"}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(n.span,{className:"mrel",children:"="}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"1.84em",verticalAlign:"-0.5413em"}}),(0,t.jsx)(n.span,{className:"mord sqrt",children:(0,t.jsxs)(n.span,{className:"vlist-t vlist-t2",children:[(0,t.jsxs)(n.span,{className:"vlist-r",children:[(0,t.jsxs)(n.span,{className:"vlist",style:{height:"1.2987em"},children:[(0,t.jsxs)(n.span,{className:"svg-align",style:{top:"-3.8em"},children:[(0,t.jsx)(n.span,{className:"pstrut",style:{height:"3.8em"}}),(0,t.jsxs)(n.span,{className:"mord",style:{paddingLeft:"1em"},children:[(0,t.jsxs)(n.span,{className:"mord",children:[(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.05764em"},children:"E"}),(0,t.jsx)(n.span,{className:"msupsub",children:(0,t.jsxs)(n.span,{className:"vlist-t vlist-t2",children:[(0,t.jsxs)(n.span,{className:"vlist-r",children:[(0,t.jsxs)(n.span,{className:"vlist",style:{height:"0.7959em"},children:[(0,t.jsxs)(n.span,{style:{top:"-2.4337em",marginLeft:"-0.0576em",marginRight:"0.05em"},children:[(0,t.jsx)(n.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(n.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(n.span,{className:"mord mtight",children:"0"})})]}),(0,t.jsxs)(n.span,{style:{top:"-3.0448em",marginRight:"0.05em"},children:[(0,t.jsx)(n.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(n.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(n.span,{className:"mord mtight",children:"2"})})]})]}),(0,t.jsx)(n.span,{className:"vlist-s",children:"\u200b"})]}),(0,t.jsx)(n.span,{className:"vlist-r",children:(0,t.jsx)(n.span,{className:"vlist",style:{height:"0.2663em"},children:(0,t.jsx)(n.span,{})})})]})})]}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(n.span,{className:"mbin",children:"\u2212"}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsxs)(n.span,{className:"mord",children:[(0,t.jsx)(n.span,{className:"mord mathnormal",children:"m"}),(0,t.jsx)(n.span,{className:"msupsub",children:(0,t.jsxs)(n.span,{className:"vlist-t vlist-t2",children:[(0,t.jsxs)(n.span,{className:"vlist-r",children:[(0,t.jsxs)(n.span,{className:"vlist",style:{height:"0.7959em"},children:[(0,t.jsxs)(n.span,{style:{top:"-2.4337em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,t.jsx)(n.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(n.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(n.span,{className:"mord mtight",children:"0"})})]}),(0,t.jsxs)(n.span,{style:{top:"-3.0448em",marginRight:"0.05em"},children:[(0,t.jsx)(n.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(n.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(n.span,{className:"mord mtight",children:"2"})})]})]}),(0,t.jsx)(n.span,{className:"vlist-s",children:"\u200b"})]}),(0,t.jsx)(n.span,{className:"vlist-r",children:(0,t.jsx)(n.span,{className:"vlist",style:{height:"0.2663em"},children:(0,t.jsx)(n.span,{})})})]})})]}),(0,t.jsxs)(n.span,{className:"mord",children:[(0,t.jsx)(n.span,{className:"mord mathnormal",children:"c"}),(0,t.jsx)(n.span,{className:"msupsub",children:(0,t.jsx)(n.span,{className:"vlist-t",children:(0,t.jsx)(n.span,{className:"vlist-r",children:(0,t.jsx)(n.span,{className:"vlist",style:{height:"0.7401em"},children:(0,t.jsxs)(n.span,{style:{top:"-2.989em",marginRight:"0.05em"},children:[(0,t.jsx)(n.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(n.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(n.span,{className:"mord mtight",children:"4"})})]})})})})})]})]})]}),(0,t.jsxs)(n.span,{style:{top:"-3.2587em"},children:[(0,t.jsx)(n.span,{className:"pstrut",style:{height:"3.8em"}}),(0,t.jsx)(n.span,{className:"hide-tail",style:{minWidth:"1.02em",height:"1.88em"},children:(0,t.jsx)(n.svg,{xmlns:"http://www.w3.org/2000/svg",width:"400em",height:"1.88em",viewBox:"0 0 400000 1944",preserveAspectRatio:"xMinYMin slice",children:(0,t.jsx)(n.path,{d:"M983 90\nl0 -0\nc4,-6.7,10,-10,18,-10 H400000v40\nH1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7\ns-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744\nc-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30\nc26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722\nc56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5\nc53.7,-170.3,84.5,-266.8,92.5,-289.5z\nM1001 80h400000v40h-400000z"})})})]})]}),(0,t.jsx)(n.span,{className:"vlist-s",children:"\u200b"})]}),(0,t.jsx)(n.span,{className:"vlist-r",children:(0,t.jsx)(n.span,{className:"vlist",style:{height:"0.5413em"},children:(0,t.jsx)(n.span,{})})})]})})]})]})]})}),"\n",(0,t.jsx)(n.p,{children:"So"}),"\n",(0,t.jsx)(n.span,{className:"katex-display",children:(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mi,{children:"E"}),(0,t.jsx)(n.mo,{children:"="}),(0,t.jsx)(n.mi,{children:"p"}),(0,t.jsxs)(n.msub,{children:[(0,t.jsx)(n.mi,{children:"p"}),(0,t.jsx)(n.mn,{children:"0"})]}),(0,t.jsx)(n.mi,{children:"c"}),(0,t.jsx)(n.mo,{children:"+"}),(0,t.jsxs)(n.msub,{children:[(0,t.jsx)(n.mi,{children:"E"}),(0,t.jsx)(n.mn,{children:"0"})]})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"E = p  p_0 c + E_0"})]})})}),(0,t.jsxs)(n.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.6833em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.05764em"},children:"E"}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(n.span,{className:"mrel",children:"="}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.7778em",verticalAlign:"-0.1944em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"p"}),(0,t.jsxs)(n.span,{className:"mord",children:[(0,t.jsx)(n.span,{className:"mord mathnormal",children:"p"}),(0,t.jsx)(n.span,{className:"msupsub",children:(0,t.jsxs)(n.span,{className:"vlist-t vlist-t2",children:[(0,t.jsxs)(n.span,{className:"vlist-r",children:[(0,t.jsx)(n.span,{className:"vlist",style:{height:"0.3011em"},children:(0,t.jsxs)(n.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,t.jsx)(n.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(n.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(n.span,{className:"mord mtight",children:"0"})})]})}),(0,t.jsx)(n.span,{className:"vlist-s",children:"\u200b"})]}),(0,t.jsx)(n.span,{className:"vlist-r",children:(0,t.jsx)(n.span,{className:"vlist",style:{height:"0.15em"},children:(0,t.jsx)(n.span,{})})})]})})]}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"c"}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(n.span,{className:"mbin",children:"+"}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,t.jsxs)(n.span,{className:"mord",children:[(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.05764em"},children:"E"}),(0,t.jsx)(n.span,{className:"msupsub",children:(0,t.jsxs)(n.span,{className:"vlist-t vlist-t2",children:[(0,t.jsxs)(n.span,{className:"vlist-r",children:[(0,t.jsx)(n.span,{className:"vlist",style:{height:"0.3011em"},children:(0,t.jsxs)(n.span,{style:{top:"-2.55em",marginLeft:"-0.0576em",marginRight:"0.05em"},children:[(0,t.jsx)(n.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(n.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(n.span,{className:"mord mtight",children:"0"})})]})}),(0,t.jsx)(n.span,{className:"vlist-s",children:"\u200b"})]}),(0,t.jsx)(n.span,{className:"vlist-r",children:(0,t.jsx)(n.span,{className:"vlist",style:{height:"0.15em"},children:(0,t.jsx)(n.span,{})})})]})})]})]})]})]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"parray_test = generate_parray(energy=0.5)\np0c = np.sqrt(parray_test.E**2 - m_e_GeV**2)\nEmean0 = np.mean(parray_test.p()*p0c + parray_test.E)\nprint(Emean0)\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    0.49999583531188\n"})}),"\n",(0,t.jsx)(n.p,{children:"let's change the reference energy"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"e_profile_test = LatticeEnergyProfile(Eref = 0.505)\ne_profile_test.apply(parray_test)\nprint(parray_test)\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    ParticleArray: \n    Ref. energy : 0.505 GeV \n    Ave. energy : 0.5 GeV \n    std(x)      : 0.1 mm\n    std(px)     : 0.02 mrad\n    std(y)      : 0.1 mm\n    std(py)     : 0.02 mrad\n    std(p)      : 0.0099\n    std(tau)    : 1.001 mm\n    Charge      : 5.0 nC \n    s pos       : 0.0 m \n    n particles : 200000\n    \n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"p0c = np.sqrt(parray_test.E**2 - m_e_GeV**2)\nEmean1 = np.mean(parray_test.p()*p0c + parray_test.E )\nprint(Emean1)\nprint(Emean0 == Emean1)\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    0.49999583531188\n    True\n"})}),"\n",(0,t.jsx)(n.h2,{id:"get-twiss-parameters-from-the-beam-slice",children:"Get Twiss parameters from the beam slice"}),"\n",(0,t.jsx)("a",{id:"twiss"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"October 2022"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# import modules\nfrom ocelot import *\nfrom ocelot.gui.accelerator import *\nfrom ocelot.utils import *\nimport copy\n\ntws0 = Twiss()\ntws0.E = 0.5\ngamma = tws0.E/m_e_GeV\ntws0.beta_x = 10\ntws0.beta_y = 15\ntws0.alpha_x = 5\ntws0.alpha_y = 2\ntws0.gamma_x = (1 + tws0.alpha_x**2)/tws0.beta_x\ntws0.gamma_y = (1 + tws0.alpha_y**2)/tws0.beta_y\ntws0.emit_x = 1e-6 / gamma\ntws0.emit_y = 0.7e-6 /gamma\n\nparray_init = generate_parray(sigma_tau=0.001, sigma_p=1e-3, charge=250e-12,\n                              chirp=0, tws=tws0, nparticles=1000000)\nprint(tws0)\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    [INFO    ] \x1b[0mTwiss parameters have priority. sigma_{x, px, y, py} will be redefined\x1b[0m\n\n\n    emit_x  = 1.0219977343468203e-09\n    emit_y  = 7.153984140427742e-10\n    beta_x  = 10\n    beta_y  = 15\n    alpha_x = 5\n    alpha_y = 2\n    gamma_x = 2.6\n    gamma_y = 0.3333333333333333\n    Dx      = 0.0\n    Dy      = 0.0\n    Dxp     = 0.0\n    Dyp     = 0.0\n    mux     = 0.0\n    muy     = 0.0\n    nu_x    = 0.0\n    nu_y    = 0.0\n    E       = 0.5\n    s        = 0.0\n    \n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"tws1 = parray_init.get_twiss_from_slice(slice='Imax')\nprint(tws1)\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    emit_x  = 1.019203099456126e-09\n    emit_y  = 7.131433798353864e-10\n    beta_x  = 10.067275802324108\n    beta_y  = 15.020030791918728\n    alpha_x = 5.0377883992890435\n    alpha_y = 2.0022182267913418\n    gamma_x = 2.6203028976241414\n    gamma_y = 0.3334798641285347\n    Dx      = 0.0\n    Dy      = 0.0\n    Dxp     = 0.0\n    Dyp     = 0.0\n    mux     = 0.0\n    muy     = 0.0\n    nu_x    = 0.0\n    nu_y    = 0.0\n    E       = 0.5\n    s        = 0.0\n    \n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"np.isclose([tws0.beta_x, tws0.beta_y, tws0.alpha_x, tws0.alpha_y, tws0.gamma_x, tws0.gamma_y, tws0.emit_x, tws0.emit_y, tws0.E], \n                      [tws1.beta_x, tws1.beta_y, tws1.alpha_x, tws1.alpha_y, tws1.gamma_x, tws1.gamma_y, tws1.emit_x, tws1.emit_y, tws1.E],\n                      rtol=1e-02, atol=1e-06)\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    array([ True,  True,  True,  True,  True,  True,  True,  True,  True])\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"tws1 = parray_init.get_twiss_from_slice(slice=None) # center of bunch \nprint(tws1)\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    emit_x  = 1.016555151437511e-09\n    emit_y  = 7.13569980329054e-10\n    beta_x  = 9.9755208924834\n    beta_y  = 14.936755941024733\n    alpha_x = 4.991005336347581\n    alpha_y = 1.9933183335573963\n    gamma_x = 2.5973715605140413\n    gamma_y = 0.33295837453141397\n    Dx      = 0.0\n    Dy      = 0.0\n    Dxp     = 0.0\n    Dyp     = 0.0\n    mux     = 0.0\n    muy     = 0.0\n    nu_x    = 0.0\n    nu_y    = 0.0\n    E       = 0.5\n    s        = 0.0\n    \n"})}),"\n",(0,t.jsx)(n.h2,{id:"transfer-maps-in-ocelot-global-assignment-and-for-specific-elements",children:"Transfer Maps in Ocelot. Global assignment and for specific elements"}),"\n",(0,t.jsx)("a",{id:"TM"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"October 2023"})}),"\n",(0,t.jsx)(n.p,{children:"In this small example, we will demonstrate various methods of using different transport maps."}),"\n",(0,t.jsx)(n.p,{children:"Before that, we need to clarify a few things:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"TransferMap"})," is a class responsible for first-order tracking, or in other words, it represents R-matrices for all elements. At some point, we extended the tracking to second order, but we didn't change the name of the TransferMap class."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"SecondTM"})," is a class responsible for second-order tracking. Essentially, it encodes second-order matrices (T) for all elements that support them."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"CavityTM"})," is a transfer map for cavities. It's a bit complicated because transverse dynamics are first order, and for longitudinal dynamics, we used higher-order formulas"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"KickTM"})," is a transfer map to simulate kicks along elements."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"MultipoleTM"})," is transfer map for Multipole element"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"RungeKuttaTM"})," is RK integrator"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"UndulatorTestTM"})," is specific transfprmation for Undulator"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from ocelot import *\n# Create magnetic lattice \nd = Drift(l=1)\nq = Quadrupole(l=1, k1=1)\nb = Bend(l=1, angle=0.01)\nc = Cavity(l=1, v=0.1)\ns = Sextupole(l=1, k2=100)\nm = Marker()\nmon = Monitor()\nvcor = Vcor(l=0.1)\nhcor = Hcor(l=0.1)\nmat = Matrix()\nsol = Solenoid(l=1, k=1)\nund = Undulator(lperiod=0.04, nperiod=10, Kx=4)\noct = Octupole(l=0.2, k3=100)\nmul = Multipole(kn=[0,1,1,1])\ncell = (d,q,b,c,s,m, mon, vcor, hcor, mat, sol, und, oct, mul)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"first-order",children:"First order"}),"\n",(0,t.jsx)(n.p,{children:"By default, when we create a lattice, first-order matrices are assigned to each element, except Cavity and Multipole elements."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"lat = MagneticLattice(cell)\nfor e in lat.sequence:\n    print(e.__class__.__name__, [tm.__class__.__name__ for tm in e._tms])\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    Drift ['TransferMap']\n    Quadrupole ['TransferMap']\n    Bend ['TransferMap', 'TransferMap', 'TransferMap']\n    Cavity ['CavityTM', 'CavityTM', 'CavityTM']\n    Sextupole ['TransferMap']\n    Marker ['TransferMap']\n    Monitor ['TransferMap']\n    Vcor ['TransferMap']\n    Hcor ['TransferMap']\n    Matrix ['TransferMap']\n    Solenoid ['TransferMap']\n    Undulator ['TransferMap']\n    Octupole ['TransferMap']\n    Multipole ['MultipoleTM']\n"})}),"\n",(0,t.jsx)(n.h3,{id:"second-order",children:"Second order"}),"\n",(0,t.jsxs)(n.p,{children:["In the event that second-order tracking is required for all elements, it can be defined using a dictionary as follows: ",(0,t.jsx)(n.code,{children:'{"global": SecondTM}'})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'lat = MagneticLattice(cell, method = {"global": SecondTM})\nfor e in lat.sequence:\n    print(e.__class__.__name__, [tm.__class__.__name__ for tm in e._tms])\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    Drift ['SecondTM']\n    Quadrupole ['SecondTM']\n    Bend ['SecondTM', 'SecondTM', 'SecondTM']\n    Cavity ['CavityTM', 'CavityTM', 'CavityTM']\n    Sextupole ['SecondTM']\n    Marker ['SecondTM']\n    Monitor ['SecondTM']\n    Vcor ['SecondTM']\n    Hcor ['SecondTM']\n    Matrix ['SecondTM']\n    Solenoid ['SecondTM']\n    Undulator ['SecondTM']\n    Octupole ['SecondTM']\n    Multipole ['MultipoleTM']\n"})}),"\n",(0,t.jsx)(n.h3,{id:"mixed-transfer-maps",children:"Mixed transfer maps"}),"\n",(0,t.jsx)(n.p,{children:"Sometimes, there are cases where a combination of methods is needed. This might be required, for example, for testing purposes."}),"\n",(0,t.jsx)(n.p,{children:'In such situations, you can define default map transformations using the key "global," and then specify a transformation for each element type. For example:'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'method = {"global": SecondTM, Drift: TransferMap, Sextupole:KickTM, Octupole:MultipoleTM, Undulator:RungeKutta}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'lat = MagneticLattice(cell, method = {"global": SecondTM, \n                                      Drift: TransferMap, \n                                      Sextupole: KickTM, \n                                      Octupole: MultipoleTM, \n                                      Undulator: RungeKuttaTM})\nfor e in lat.sequence:\n    print(e.__class__.__name__, [tm.__class__.__name__ for tm in e._tms])\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    Can't set MultipoleTM for Octupole fall back to default tm which is TransferMap.\n    Drift ['TransferMap']\n    Quadrupole ['SecondTM']\n    Bend ['SecondTM', 'SecondTM', 'SecondTM']\n    Cavity ['CavityTM', 'CavityTM', 'CavityTM']\n    Sextupole ['KickTM']\n    Marker ['SecondTM']\n    Monitor ['SecondTM']\n    Vcor ['SecondTM']\n    Hcor ['SecondTM']\n    Matrix ['SecondTM']\n    Solenoid ['SecondTM']\n    Undulator ['RungeKuttaTM']\n    Octupole ['TransferMap']\n    Multipole ['MultipoleTM']\n"})}),"\n",(0,t.jsx)(n.h3,{id:"note",children:"NOTE"}),"\n",(0,t.jsxs)(n.p,{children:["However, if an element does not support a specific transformation, it will fall back to the default, which is ",(0,t.jsx)(n.code,{children:"TransferMap"}),". For example, in the method definition above, the Octupole does not support MultipoleTM, but it does support, for example ",(0,t.jsx)(n.code,{children:"KickTM"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'lat = MagneticLattice(cell, method = {"global": SecondTM, \n                                      Drift: TransferMap, \n                                      Sextupole: KickTM, \n                                      Octupole: KickTM, \n                                      Undulator: RungeKuttaTM})\nfor e in lat.sequence:\n    print(e.__class__.__name__, [tm.__class__.__name__ for tm in e._tms])\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    Drift ['TransferMap']\n    Quadrupole ['SecondTM']\n    Bend ['SecondTM', 'SecondTM', 'SecondTM']\n    Cavity ['CavityTM', 'CavityTM', 'CavityTM']\n    Sextupole ['KickTM']\n    Marker ['SecondTM']\n    Monitor ['SecondTM']\n    Vcor ['SecondTM']\n    Hcor ['SecondTM']\n    Matrix ['SecondTM']\n    Solenoid ['SecondTM']\n    Undulator ['RungeKuttaTM']\n    Octupole ['KickTM']\n    Multipole ['MultipoleTM']\n"})}),"\n",(0,t.jsx)(n.h2,{id:"to-be-continued-",children:"To be continued ..."})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},2611:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/small_useful_features_11_1-9c6ad1589bb940293257a64843a3c0f3.png"},2389:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/small_useful_features_13_1-b6b5f78d5e7a39b584c76ec8ddeb403f.png"},6744:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/small_useful_features_16_1-ecf52038dfa6ee6076bbe2d3b744922e.png"},6487:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/small_useful_features_25_0-d9ceee2ee232cb1b3a9e4953768580cd.png"},5728:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/small_useful_features_27_1-7fc0640c93ea81c2ccd84be0047afa4d.png"},5371:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/small_useful_features_29_0-279828603209f78bbecba2874e08c0b9.png"},9011:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/small_useful_features_32_0-3381264f41e0801f5959d26a6c40b22b.png"},1227:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/small_useful_features_33_1-279828603209f78bbecba2874e08c0b9.png"},2793:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/small_useful_features_34_0-25a5fe81a74facc12c7f63e5c9d6b1c3.png"},8046:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/small_useful_features_39_2-c3cf0c476f8971b71cf374bb90fe635f.png"},7620:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/small_useful_features_40_0-96f728a361188c3318095dab01dfd5f8.png"},5851:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/small_useful_features_42_1-ea695d529d4bc51c6c839953e141917f.png"},2337:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/small_useful_features_44_1-72784ddfd1fa73135687c3452673e7fa.png"},7646:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/small_useful_features_47_1-02852dc041e8e452a9434e330a5f833c.png"},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var a=s(6540);const t={},r=a.createContext(t);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);